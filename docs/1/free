<!DOCTYPE html>

<html lang="en">

    <head>

        <meta charset="utf-8">
        <meta name="viewport" content="initial-scale=1, width=device-width">

        <!-- https://getbootstrap.com/ -->
        <link crossorigin="anonymous" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css" integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx" rel="stylesheet">
        <script crossorigin="anonymous" integrity="sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa" src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js"></script>

        <!-- https://jquery.com/ -->
        <script crossorigin="anonymous" integrity="sha512-894YE6QWD5I59HgZOGReFYm4dnWc1Qt5NtvYSaNcOP+u1T9qYdvdihz0PPSiiqn/+/3e7Jo4EaG7TubfWGUrMQ==" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

        <!-- https://fontawesome.com/ -->
        <link crossorigin="anonymous" href="https://use.fontawesome.com/releases/v5.13.0/css/all.css" integrity="sha384-Bfad6CLCknfcloXFOyFnlgtENryhrpZCe29RTifKEixXQZ38WheV+i/6YWSzkz3V" rel="stylesheet">

        <!-- https://www.ubuntu.com/ -->
        <link href="https://assets.ubuntu.com/v1/49a1a858-favicon-32x32.png" rel="icon" type="image/png">

        <link href="/static/rouge.css" rel="stylesheet">

        <script>

            

    $(function() {

        // Ensure all elements are styled the same
        $('pre').addClass('p-3');
        $('table').addClass('table');

        // Add toggles
        $('div.section').each(function(index, element) {

            // Prepare switch
            const $section = $(element);
            const id = 'switch-' + $section.attr('data-for');
            const $switch = $(
                '<div class="form-check form-switch mb-4">' +
                '<input id="' + id + '" class="form-check-input" type="checkbox">' +
                '<label class="form-check-label" for="' + id + '">less comfortable</label>' +
                '</div>'
            );

            // Find comfort levels
            const $less = $section.find('[data-less]');
            const $more = $section.find('[data-more]');

            // If a less-comfortable section exists, check it by default
            if ($less.length) {
                $switch.find('input').prop('checked', true);
            }

            // If only one comfort level exists, disable switch
            if (!$less.length || !$more.length) {
                $switch.find('input').prop('disabled', true);
            }

            // Listen for changes
            $switch.find('input').on('change', function() {
                if ($(this).is(':checked')) {
                    $less.removeClass('d-none');
                    $more.addClass('d-none');
                }
                else {
                    $less.addClass('d-none');
                    $more.removeClass('d-none');
                }
            }).trigger('change');

            // Add switch to DOM section has less-comfy level
            if ($section.find('[data-less]').length) {
                $section.prepend($switch);
            }
        });

        // Hide sections
        $('[data-hide]').each(function(index, element) {
            const $button = $('<button class="btn btn-outline-primary btn-sm" type="button">Show</button>');
            const id = $(element).attr('data-for');
            $(element).before($button);
            $button.on('click', function() {
                $(element).show();
                $(this).remove();
            });
            if (id) {
                $button.attr('data-for', id);
                $('#' + id).children('a').on('click', function() {
                    $button.trigger('click');
                });
            }
            $(element).hide();
        });

        // Show section if in hash
        $(window).on('hashchange', function() {
            const id = window.location.hash.slice(1);
            if (id) {
                $('button[data-for="' + id + '"]').trigger('click');
            }
        });
        $(window).trigger('hashchange');
    });



        </script>

        <script>

            $(function() {

                // Add borders to tables
                $('.table').addClass('table-bordered');

                // Enable popovers
                $('[data-bs-toggle="popover"]').each(function(index, element) {
                    new bootstrap.Popover(element, {
                        boundary: 'viewport',
                        html: true,
                        placement: 'bottom',
                        trigger: 'focus'
                    });
                });

                // Ensure all elements are styled the same
                $('h1').addClass('border-bottom fw-bold h2 mb-3 pb-2 pt-4');
                $('h2').addClass('fw-bold h3');

                // Ensure last heading can be anchored atop page
                $(window).resize(function() {
                    const top = $('h1').last().offset().top;
                    const margin = $(window).height() - ($('body').outerHeight() - top);
                    $('body').css('margin-bottom', Math.max(0, Math.ceil(margin)) + 'px');
                });
                $(window).trigger('resize');

                // Reveal body
                $('body').removeClass('invisible');
            });

        </script>

        <style>

            /* Style popovers */
            .popover {
                font-family: inherit;
                max-width: 100%;
            }

            /* Wrap long words (and URLs, whether linked or not), especially on mobile,
            but not in buttons and not in tables, which should instead scroll horizontally */
            * {
                word-break: break-word;
            }
            button, table * {
                word-break: normal;
            }

            /* Remove underlining */
            a {
                text-decoration: none;
            }
            a:hover {
                text-decoration: underline;
            }
            nav a:hover {
                text-decoration: none;
            }

            /* Match Gmail's yellow */
            a[data-bs-toggle=popover] {
                border-bottom: 2px solid rgb(252, 237, 193);
                box-shadow: inset 0 -2px 0 rgb(252, 237, 193);
                cursor: help;
            }
            a[data-bs-toggle=popover]:hover {
                background-color: rgb(252, 237, 193);
            }

            /* Match pre tags */
            code {
                color: inherit;
            }

            /* A la Jekyll theme */
            code, pre {
                background-color: #f8f9fa;
                border: 1px solid #dee2e6;
                padding: calc(.2rem - 3px) 0.2rem;
            }
            pre code {
                background-color: initial;
                border: initial;
                padding: initial;
            }

            /* Don't shrink these */
            code, pre {
                font-size: inherit;
            }

            /* Don't italicize */
            dl dt {
                font-style: normal;
            }

            /* Don't fill viewport */
            .table {
                width: inherit;
            }

        </style>

        <style>

            

    /* Match dl and p */
    button {
        margin-bottom: 1rem;
    }

    /* Ensure syntax-highlighted code scrolls on iOS, https://stackoverflow.com/a/49592093 */
    pre code {
        white-space: pre;
        word-wrap: normal;
    }
    pre code span {
        white-space: nowrap;
    }

    

        </style>

        <title>CS50 Manual Pages</title>

    </head>

    <body class="font-monospace invisible pb-5">

        <nav class="bg-dark navbar navbar-dark navbar-expand-xl px-4">
            <a class="navbar-brand" href="/"><i class="fas fa-list pe-3"></i>CS50 Manual Pages</a>
        </nav>

        <div class="container-fluid mt-2 px-4">
            

    <h1 id='name'><a href='#name'>NAME</a></h1><div class='section' data-for='name'><div data-more>
<p>free - Display amount of free and used memory in the system</p>
</div></div><h1 id='synopsis'><a href='#synopsis'>SYNOPSIS</a></h1><div class='section' data-for='synopsis'><div data-more>
<p><strong>free</strong> [<code>options</code>]</p>
</div></div><h1 id='description'><a href='#description'>DESCRIPTION</a></h1><div class='section' data-for='description'><div data-more>
<p><strong>free</strong> displays the total amount of free and used physical and swap memory in the system, as well as the buffers and caches used by the kernel. The information is gathered by parsing /proc/meminfo. The displayed columns are:</p>
<dl>
<dt><strong>total</strong></dt>
<dd><p>Total installed memory (MemTotal and SwapTotal in /proc/meminfo)</p>
</dd>
<dt><strong>used</strong></dt>
<dd><p>Used memory (calculated as <strong>total</strong> - <strong>free</strong> - <strong>buffers</strong> - <strong>cache</strong>)</p>
</dd>
<dt><strong>free</strong></dt>
<dd><p>Unused memory (MemFree and SwapFree in /proc/meminfo)</p>
</dd>
<dt><strong>shared</strong></dt>
<dd><p>Memory used (mostly) by tmpfs (Shmem in /proc/meminfo)</p>
</dd>
<dt><strong>buffers</strong></dt>
<dd><p>Memory used by kernel buffers (Buffers in /proc/meminfo)</p>
</dd>
<dt><strong>cache</strong></dt>
<dd><p>Memory used by the page cache and slabs (Cached and SReclaimable in /proc/meminfo)</p>
</dd>
<dt><strong>buff/cache</strong></dt>
<dd><p>Sum of <strong>buffers</strong> and <strong>cache</strong></p>
</dd>
<dt><strong>available</strong></dt>
<dd><p>Estimation of how much memory is available for starting new applications, without swapping. Unlike the data provided by the <strong>cache</strong> or <strong>free</strong> fields, this field takes into account page cache and also that not all reclaimable memory slabs will be reclaimed due to items being in use (MemAvailable in /proc/meminfo, available on kernels 3.14, emulated on kernels 2.6.27+, otherwise the same as <strong>free</strong>)</p>
</dd>
</dl>
</div></div><h1 id='options'><a href='#options'>OPTIONS</a></h1><div data-for='options' data-hide><div class='section' data-for='options'><div data-more>
<dl>
<dt><strong>-b</strong>, <strong>--bytes</strong></dt>
<dd><p>Display the amount of memory in bytes.</p>
</dd>
<dt><strong>-k</strong>, <strong>--kibi</strong></dt>
<dd><p>Display the amount of memory in kibibytes. This is the default.</p>
</dd>
<dt><strong>-m</strong>, <strong>--mebi</strong></dt>
<dd><p>Display the amount of memory in mebibytes.</p>
</dd>
<dt><strong>-g</strong>, <strong>--gibi</strong></dt>
<dd><p>Display the amount of memory in gibibytes.</p>
</dd>
<dt><strong>--tebi</strong></dt>
<dd><p>Display the amount of memory in tebibytes.</p>
</dd>
<dt><strong>--pebi</strong></dt>
<dd><p>Display the amount of memory in pebibytes.</p>
</dd>
<dt><strong>--kilo</strong></dt>
<dd><p>Display the amount of memory in kilobytes. Implies --si.</p>
</dd>
<dt><strong>--mega</strong></dt>
<dd><p>Display the amount of memory in megabytes. Implies --si.</p>
</dd>
<dt><strong>--giga</strong></dt>
<dd><p>Display the amount of memory in gigabytes. Implies --si.</p>
</dd>
<dt><strong>--tera</strong></dt>
<dd><p>Display the amount of memory in terabytes. Implies --si.</p>
</dd>
<dt><strong>--peta</strong></dt>
<dd><p>Display the amount of memory in petabytes. Implies --si.</p>
</dd>
<dt><strong>-h</strong>, <strong>--human</strong></dt>
<dd><p>Show all output fields automatically scaled to shortest three digit unit and display the units of print out. Following units are used.</p>
</dd>
</dl>
<pre><code>  B = bytes
  Ki = kibibyte
  Mi = mebibyte
  Gi = gibibyte
  Ti = tebibyte
  Pi = pebibyte</code></pre>
<p>If unit is missing, and you have exbibyte of RAM or swap, the number is in tebibytes and columns might not be aligned with header.</p>
<dl>
<dt><strong>-w</strong>, <strong>--wide</strong></dt>
<dd><p>Switch to the wide mode. The wide mode produces lines longer than 80 characters. In this mode <strong>buffers</strong> and <strong>cache</strong> are reported in two separate columns.</p>
</dd>
<dt><strong>-c</strong>, <strong>--count</strong> <code>count</code></dt>
<dd><p>Display the result <code>count</code> times. Requires the <strong>-s</strong> option.</p>
</dd>
<dt><strong>-l</strong>, <strong>--lohi</strong></dt>
<dd><p>Show detailed low and high memory statistics.</p>
</dd>
<dt><strong>-s</strong>, <strong>--seconds</strong> <code>delay</code></dt>
<dd><p>Continuously display the result <code>delay</code> seconds apart. You may actually specify any floating point number for <code>delay</code> using either . or , for decimal point. <a href='/3/usleep'>usleep</a>(3) is used for microsecond resolution delay times.</p>
</dd>
<dt><strong>--si</strong></dt>
<dd><p>Use kilo, mega, giga etc (power of 1000) instead of kibi, mebi, gibi (power of 1024).</p>
</dd>
<dt><strong>-t</strong>, <strong>--total</strong></dt>
<dd><p>Display a line showing the column totals.</p>
</dd>
<dt><strong>--help</strong></dt>
<dd><p>Print help.</p>
</dd>
<dt><strong>-V</strong>, <strong>--version</strong></dt>
<dd><p>Display version information.</p>
</dd>
</dl>
</div></div></div><h1 id='files'><a href='#files'>FILES</a></h1><div data-for='files' data-hide><div class='section' data-for='files'><div data-more>
<dl>
<dt>/proc/meminfo</dt>
<dd><p>memory information</p>
</dd>
</dl>
</div></div></div><h1 id='bugs'><a href='#bugs'>BUGS</a></h1><div data-for='bugs' data-hide><div class='section' data-for='bugs'><div data-more>
<p>The value for the <strong>shared</strong> column is not available from kernels before 2.6.32 and is displayed as zero.</p>
<dl>
<dt>Please send bug reports to</dt>
<dd><p><a href="<a href="mailto:procps@freelists.org">procps@freelists.org</a>"></a></p>
</dd>
</dl>
</div></div></div><h1 id='see-also'><a href='#see-also'>SEE ALSO</a></h1><div class='section' data-for='see-also'><div data-more>
<p><a href='/1/ps'>ps</a>(1), <a href='/1/slabtop'>slabtop</a>(1), <strong>top</strong>"(1), <a href='/8/vmstat'>vmstat</a>(8).</p></div></div>


        </div>

    </body>

</html>