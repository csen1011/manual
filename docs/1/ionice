<!DOCTYPE html>

<html lang="en">

    <head>

        <meta charset="utf-8">
        <meta name="viewport" content="initial-scale=1, width=device-width">

        <!-- https://getbootstrap.com/ -->
        <link crossorigin="anonymous" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css" integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx" rel="stylesheet">
        <script crossorigin="anonymous" integrity="sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa" src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js"></script>

        <!-- https://jquery.com/ -->
        <script crossorigin="anonymous" integrity="sha512-894YE6QWD5I59HgZOGReFYm4dnWc1Qt5NtvYSaNcOP+u1T9qYdvdihz0PPSiiqn/+/3e7Jo4EaG7TubfWGUrMQ==" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

        <!-- https://fontawesome.com/ -->
        <link crossorigin="anonymous" href="https://use.fontawesome.com/releases/v5.13.0/css/all.css" integrity="sha384-Bfad6CLCknfcloXFOyFnlgtENryhrpZCe29RTifKEixXQZ38WheV+i/6YWSzkz3V" rel="stylesheet">

        <!-- https://www.ubuntu.com/ -->
        <link href="https://assets.ubuntu.com/v1/49a1a858-favicon-32x32.png" rel="icon" type="image/png">

        <link href="/static/rouge.css" rel="stylesheet">

        <script>

            

    $(function() {

        // Ensure all elements are styled the same
        $('pre').addClass('p-3');
        $('table').addClass('table');

        // Add toggles
        $('div.section').each(function(index, element) {

            // Prepare switch
            const $section = $(element);
            const id = 'switch-' + $section.attr('data-for');
            const $switch = $(
                '<div class="form-check form-switch mb-4">' +
                '<input id="' + id + '" class="form-check-input" type="checkbox">' +
                '<label class="form-check-label" for="' + id + '">less comfortable</label>' +
                '</div>'
            );

            // Find comfort levels
            const $less = $section.find('[data-less]');
            const $more = $section.find('[data-more]');

            // If a less-comfortable section exists, check it by default
            if ($less.length) {
                $switch.find('input').prop('checked', true);
            }

            // If only one comfort level exists, disable switch
            if (!$less.length || !$more.length) {
                $switch.find('input').prop('disabled', true);
            }

            // Listen for changes
            $switch.find('input').on('change', function() {
                if ($(this).is(':checked')) {
                    $less.removeClass('d-none');
                    $more.addClass('d-none');
                }
                else {
                    $less.addClass('d-none');
                    $more.removeClass('d-none');
                }
            }).trigger('change');

            // Add switch to DOM section has less-comfy level
            if ($section.find('[data-less]').length) {
                $section.prepend($switch);
            }
        });

        // Hide sections
        $('[data-hide]').each(function(index, element) {
            const $button = $('<button class="btn btn-outline-primary btn-sm" type="button">Show</button>');
            const id = $(element).attr('data-for');
            $(element).before($button);
            $button.on('click', function() {
                $(element).show();
                $(this).remove();
            });
            if (id) {
                $button.attr('data-for', id);
                $('#' + id).children('a').on('click', function() {
                    $button.trigger('click');
                });
            }
            $(element).hide();
        });

        // Show section if in hash
        $(window).on('hashchange', function() {
            const id = window.location.hash.slice(1);
            if (id) {
                $('button[data-for="' + id + '"]').trigger('click');
            }
        });
        $(window).trigger('hashchange');
    });



        </script>

        <script>

            $(function() {

                // Add borders to tables
                $('.table').addClass('table-bordered');

                // Enable popovers
                $('[data-bs-toggle="popover"]').each(function(index, element) {
                    new bootstrap.Popover(element, {
                        boundary: 'viewport',
                        html: true,
                        placement: 'bottom',
                        trigger: 'focus'
                    });
                });

                // Ensure all elements are styled the same
                $('h1').addClass('border-bottom fw-bold h2 mb-3 pb-2 pt-4');
                $('h2').addClass('fw-bold h3');

                // Ensure last heading can be anchored atop page
                $(window).resize(function() {
                    const top = $('h1').last().offset().top;
                    const margin = $(window).height() - ($('body').outerHeight() - top);
                    $('body').css('margin-bottom', Math.max(0, Math.ceil(margin)) + 'px');
                });
                $(window).trigger('resize');

                // Reveal body
                $('body').removeClass('invisible');
            });

        </script>

        <style>

            /* Style popovers */
            .popover {
                font-family: inherit;
                max-width: 100%;
            }

            /* Wrap long words (and URLs, whether linked or not), especially on mobile,
            but not in buttons and not in tables, which should instead scroll horizontally */
            * {
                word-break: break-word;
            }
            button, table * {
                word-break: normal;
            }

            /* Remove underlining */
            a {
                text-decoration: none;
            }
            a:hover {
                text-decoration: underline;
            }
            nav a:hover {
                text-decoration: none;
            }

            /* Match Gmail's yellow */
            a[data-bs-toggle=popover] {
                border-bottom: 2px solid rgb(252, 237, 193);
                box-shadow: inset 0 -2px 0 rgb(252, 237, 193);
                cursor: help;
            }
            a[data-bs-toggle=popover]:hover {
                background-color: rgb(252, 237, 193);
            }

            /* Match pre tags */
            code {
                color: inherit;
            }

            /* A la Jekyll theme */
            code, pre {
                background-color: #f8f9fa;
                border: 1px solid #dee2e6;
                padding: calc(.2rem - 3px) 0.2rem;
            }
            pre code {
                background-color: initial;
                border: initial;
                padding: initial;
            }

            /* Don't shrink these */
            code, pre {
                font-size: inherit;
            }

            /* Don't italicize */
            dl dt {
                font-style: normal;
            }

            /* Don't fill viewport */
            .table {
                width: inherit;
            }

        </style>

        <style>

            

    /* Match dl and p */
    button {
        margin-bottom: 1rem;
    }

    /* Ensure syntax-highlighted code scrolls on iOS, https://stackoverflow.com/a/49592093 */
    pre code {
        white-space: pre;
        word-wrap: normal;
    }
    pre code span {
        white-space: nowrap;
    }

    

        </style>

        <title>CS50 Manual Pages</title>

    </head>

    <body class="font-monospace invisible pb-5">

        <nav class="bg-dark navbar navbar-dark navbar-expand-xl px-4">
            <a class="navbar-brand" href="/"><i class="fas fa-list pe-3"></i>CS50 Manual Pages</a>
        </nav>

        <div class="container-fluid mt-2 px-4">
            

    <h1 id='name'><a href='#name'>NAME</a></h1><div class='section' data-for='name'><div data-more>
<p>ionice - set or get process I/O scheduling class and priority</p>
</div></div><h1 id='synopsis'><a href='#synopsis'>SYNOPSIS</a></h1><div class='section' data-for='synopsis'><div data-more>
<p><strong>ionice</strong> [<strong>-c</strong> <code>class</code>] [<strong>-n</strong> <code>level</code>] [<strong>-t</strong>] <strong>-p</strong> <code>PID</code></p>
<p><strong>ionice</strong> [<strong>-c</strong> <code>class</code>] [<strong>-n</strong> <code>level</code>] [<strong>-t</strong>] <strong>-P</strong> <code>PGID</code></p>
<p><strong>ionice</strong> [<strong>-c</strong> <code>class</code>] [<strong>-n</strong> <code>level</code>] [<strong>-t</strong>] <strong>-u</strong> <code>UID</code></p>
<p><strong>ionice</strong> [<strong>-c</strong> <code>class</code>] [<strong>-n</strong> <code>level</code>] [<strong>-t</strong>] <code>command</code> [argument] ...</p>
</div></div><h1 id='description'><a href='#description'>DESCRIPTION</a></h1><div class='section' data-for='description'><div data-more>
<p>This program sets or gets the I/O scheduling class and priority for a program. If no arguments or just <strong>-p</strong> is given, <strong>ionice</strong> will query the current I/O scheduling class and priority for that process.</p>
<p>When <code>command</code> is given, <strong>ionice</strong> will run this command with the given arguments. If no <code>class</code> is specified, then <code>command</code> will be executed with the "best-effort" scheduling class. The default priority level is 4.</p>
<p>As of this writing, a process can be in one of three scheduling classes:</p>
<p><strong>Idle</strong></p>
<blockquote>
<p>A program running with idle I/O priority will only get disk time when no other program has asked for disk I/O for a defined grace period. The impact of an idle I/O process on normal system activity should be zero. This scheduling class does not take a priority argument. Presently, this scheduling class is permitted for an ordinary user (since kernel 2.6.25).</p>
</blockquote>
<p><strong>Best-effort</strong></p>
<blockquote>
<p>This is the effective scheduling class for any process that has not asked for a specific I/O priority. This class takes a priority argument from <code>0-7</code>, with a lower number being higher priority. Programs running at the same best-effort priority are served in a round-robin fashion.</p>
<p>Note that before kernel 2.6.26 a process that has not asked for an I/O priority formally uses "<strong>none</strong>" as scheduling class, but the I/O scheduler will treat such processes as if it were in the best-effort class. The priority within the best-effort class will be dynamically derived from the CPU nice level of the process: io_priority = (cpu_nice + 20) / 5.</p>
<p>For kernels after 2.6.26 with the CFQ I/O scheduler, a process that has not asked for an I/O priority inherits its CPU scheduling class. The I/O priority is derived from the CPU nice level of the process (same as before kernel 2.6.26).</p>
</blockquote>
<p><strong>Realtime</strong></p>
<blockquote>
<p>The RT scheduling class is given first access to the disk, regardless of what else is going on in the system. Thus the RT class needs to be used with some care, as it can starve other processes. As with the best-effort class, 8 priority levels are defined denoting how big a time slice a given process will receive on each scheduling window. This scheduling class is not permitted for an ordinary (i.e., non-root) user.</p>
</blockquote>
</div></div><h1 id='options'><a href='#options'>OPTIONS</a></h1><div data-for='options' data-hide><div class='section' data-for='options'><div data-more>
<p><strong>-c</strong>, <strong>--class</strong> <code>class</code></p>
<blockquote>
<p>Specify the name or number of the scheduling class to use; <code>0</code> for none, <code>1</code> for realtime, <code>2</code> for best-effort, <code>3</code> for idle.</p>
</blockquote>
<p><strong>-n</strong>, <strong>--classdata</strong> <code>level</code></p>
<blockquote>
<p>Specify the scheduling class data. This only has an effect if the class accepts an argument. For realtime and best-effort, <code>0-7</code> are valid data (priority levels), and <code>0</code> represents the highest priority level.</p>
</blockquote>
<p><strong>-p</strong>, <strong>--pid</strong> <code>PID</code>...</p>
<blockquote>
<p>Specify the process IDs of running processes for which to get or set the scheduling parameters.</p>
</blockquote>
<p><strong>-P</strong>, <strong>--pgid</strong> <code>PGID</code>...</p>
<blockquote>
<p>Specify the process group IDs of running processes for which to get or set the scheduling parameters.</p>
</blockquote>
<p><strong>-t</strong>, <strong>--ignore</strong></p>
<blockquote>
<p>Ignore failure to set the requested priority. If <code>command</code> was specified, run it even in case it was not possible to set the desired scheduling priority, which can happen due to insufficient privileges or an old kernel version.</p>
</blockquote>
<p><strong>-h</strong>, <strong>--help</strong></p>
<blockquote>
<p>Display help text and exit.</p>
</blockquote>
<p><strong>-u</strong>, <strong>--uid</strong> <code>UID</code>...</p>
<blockquote>
<p>Specify the user IDs of running processes for which to get or set the scheduling parameters.</p>
</blockquote>
<p><strong>-V</strong>, <strong>--version</strong></p>
<blockquote>
<p>Display version information and exit.</p>
</blockquote>
</div></div></div><h1 id='notes'><a href='#notes'>NOTES</a></h1><div data-for='notes' data-hide><div class='section' data-for='notes'><div data-more>
<p>Linux supports I/O scheduling priorities and classes since 2.6.13 with the CFQ I/O scheduler.</p>
</div></div></div><h1 id='examples'><a href='#examples'>EXAMPLES</a></h1><div class='section' data-for='examples'><div data-more>
<blockquote>
<p>·</p>
<ul>
<li></li>
</ul>
<p># <strong>ionice</strong> -c 3 -p 89</p>
</blockquote>
<p>Sets process with PID 89 as an idle I/O process.</p>
<blockquote>
<p>·</p>
<ul>
<li></li>
</ul>
<p># <strong>ionice</strong> -c 2 -n 0 bash</p>
</blockquote>
<p>Runs 'bash' as a best-effort program with highest priority.</p>
<blockquote>
<p>·</p>
<ul>
<li></li>
</ul>
<p># <strong>ionice</strong> -p 89 91</p>
</blockquote>
<p>Prints the class and priority of the processes with PID 89 and 91.</p>
</div></div><h1 id='authors'><a href='#authors'>AUTHORS</a></h1><div data-for='authors' data-hide><div class='section' data-for='authors'><div data-more>
</div></div></div><h1 id='see-also'><a href='#see-also'>SEE ALSO</a></h1><div class='section' data-for='see-also'><div data-more>
<p><a href='/2/ioprio_set'>ioprio_set</a>(2)</p>
</div></div><h1 id='reporting-bugs'><a href='#reporting-bugs'>REPORTING BUGS</a></h1><div data-for='reporting-bugs' data-hide><div class='section' data-for='reporting-bugs'><div data-more>
<p>For bug reports, use the issue tracker at &lt;<a href="https://github.com/karelzak/util-linux/issues&amp;gt;">https://github.com/karelzak/util-linux/issues&gt;</a>.</p>
</div></div></div><h1 id='availability'><a href='#availability'>AVAILABILITY</a></h1><div data-for='availability' data-hide><div class='section' data-for='availability'><div data-more>
<p>The <strong>ionice</strong> command is part of the util-linux package which can be downloaded from <code>Linux Kernel Archive</code> &lt;<a href="https://www.kernel.org/pub/linux/utils/util-linux/&amp;gt;">https://www.kernel.org/pub/linux/utils/util-linux/&gt;</a>.</p></div></div></div>


        </div>

    </body>

</html>