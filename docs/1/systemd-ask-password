<!DOCTYPE html>

<html lang="en">

    <head>

        <meta charset="utf-8">
        <meta name="viewport" content="initial-scale=1, width=device-width">

        <!-- https://getbootstrap.com/ -->
        <link crossorigin="anonymous" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css" integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx" rel="stylesheet">
        <script crossorigin="anonymous" integrity="sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa" src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js"></script>

        <!-- https://jquery.com/ -->
        <script crossorigin="anonymous" integrity="sha512-894YE6QWD5I59HgZOGReFYm4dnWc1Qt5NtvYSaNcOP+u1T9qYdvdihz0PPSiiqn/+/3e7Jo4EaG7TubfWGUrMQ==" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

        <!-- https://fontawesome.com/ -->
        <link crossorigin="anonymous" href="https://use.fontawesome.com/releases/v5.13.0/css/all.css" integrity="sha384-Bfad6CLCknfcloXFOyFnlgtENryhrpZCe29RTifKEixXQZ38WheV+i/6YWSzkz3V" rel="stylesheet">

        <!-- https://www.ubuntu.com/ -->
        <link href="https://assets.ubuntu.com/v1/49a1a858-favicon-32x32.png" rel="icon" type="image/png">

        <link href="/static/rouge.css" rel="stylesheet">

        <script>

            

    $(function() {

        // Ensure all elements are styled the same
        $('pre').addClass('p-3');
        $('table').addClass('table');

        // Add toggles
        $('div.section').each(function(index, element) {

            // Prepare switch
            const $section = $(element);
            const id = 'switch-' + $section.attr('data-for');
            const $switch = $(
                '<div class="form-check form-switch mb-4">' +
                '<input id="' + id + '" class="form-check-input" type="checkbox">' +
                '<label class="form-check-label" for="' + id + '">less comfortable</label>' +
                '</div>'
            );

            // Find comfort levels
            const $less = $section.find('[data-less]');
            const $more = $section.find('[data-more]');

            // If a less-comfortable section exists, check it by default
            if ($less.length) {
                $switch.find('input').prop('checked', true);
            }

            // If only one comfort level exists, disable switch
            if (!$less.length || !$more.length) {
                $switch.find('input').prop('disabled', true);
            }

            // Listen for changes
            $switch.find('input').on('change', function() {
                if ($(this).is(':checked')) {
                    $less.removeClass('d-none');
                    $more.addClass('d-none');
                }
                else {
                    $less.addClass('d-none');
                    $more.removeClass('d-none');
                }
            }).trigger('change');

            // Add switch to DOM section has less-comfy level
            if ($section.find('[data-less]').length) {
                $section.prepend($switch);
            }
        });

        // Hide sections
        $('[data-hide]').each(function(index, element) {
            const $button = $('<button class="btn btn-outline-primary btn-sm" type="button">Show</button>');
            const id = $(element).attr('data-for');
            $(element).before($button);
            $button.on('click', function() {
                $(element).show();
                $(this).remove();
            });
            if (id) {
                $button.attr('data-for', id);
                $('#' + id).children('a').on('click', function() {
                    $button.trigger('click');
                });
            }
            $(element).hide();
        });

        // Show section if in hash
        $(window).on('hashchange', function() {
            const id = window.location.hash.slice(1);
            if (id) {
                $('button[data-for="' + id + '"]').trigger('click');
            }
        });
        $(window).trigger('hashchange');
    });



        </script>

        <script>

            $(function() {

                // Add borders to tables
                $('.table').addClass('table-bordered');

                // Enable popovers
                $('[data-bs-toggle="popover"]').each(function(index, element) {
                    new bootstrap.Popover(element, {
                        boundary: 'viewport',
                        html: true,
                        placement: 'bottom',
                        trigger: 'focus'
                    });
                });

                // Ensure all elements are styled the same
                $('h1').addClass('border-bottom fw-bold h2 mb-3 pb-2 pt-4');
                $('h2').addClass('fw-bold h3');

                // Ensure last heading can be anchored atop page
                $(window).resize(function() {
                    const top = $('h1').last().offset().top;
                    const margin = $(window).height() - ($('body').outerHeight() - top);
                    $('body').css('margin-bottom', Math.max(0, Math.ceil(margin)) + 'px');
                });
                $(window).trigger('resize');

                // Reveal body
                $('body').removeClass('invisible');
            });

        </script>

        <style>

            /* Style popovers */
            .popover {
                font-family: inherit;
                max-width: 100%;
            }

            /* Wrap long words (and URLs, whether linked or not), especially on mobile,
            but not in buttons and not in tables, which should instead scroll horizontally */
            * {
                word-break: break-word;
            }
            button, table * {
                word-break: normal;
            }

            /* Remove underlining */
            a {
                text-decoration: none;
            }
            a:hover {
                text-decoration: underline;
            }
            nav a:hover {
                text-decoration: none;
            }

            /* Match Gmail's yellow */
            a[data-bs-toggle=popover] {
                border-bottom: 2px solid rgb(252, 237, 193);
                box-shadow: inset 0 -2px 0 rgb(252, 237, 193);
                cursor: help;
            }
            a[data-bs-toggle=popover]:hover {
                background-color: rgb(252, 237, 193);
            }

            /* Match pre tags */
            code {
                color: inherit;
            }

            /* A la Jekyll theme */
            code, pre {
                background-color: #f8f9fa;
                border: 1px solid #dee2e6;
                padding: calc(.2rem - 3px) 0.2rem;
            }
            pre code {
                background-color: initial;
                border: initial;
                padding: initial;
            }

            /* Don't shrink these */
            code, pre {
                font-size: inherit;
            }

            /* Don't italicize */
            dl dt {
                font-style: normal;
            }

            /* Don't fill viewport */
            .table {
                width: inherit;
            }

        </style>

        <style>

            

    /* Match dl and p */
    button {
        margin-bottom: 1rem;
    }

    /* Ensure syntax-highlighted code scrolls on iOS, https://stackoverflow.com/a/49592093 */
    pre code {
        white-space: pre;
        word-wrap: normal;
    }
    pre code span {
        white-space: nowrap;
    }

    

        </style>

        <title>CS50 Manual Pages</title>

    </head>

    <body class="font-monospace invisible pb-5">

        <nav class="bg-dark navbar navbar-dark navbar-expand-xl px-4">
            <a class="navbar-brand" href="/"><i class="fas fa-list pe-3"></i>CS50 Manual Pages</a>
        </nav>

        <div class="container-fluid mt-2 px-4">
            

    <h1 id='name'><a href='#name'>NAME</a></h1><div class='section' data-for='name'><div data-more>
<p>systemd-ask-password - Query the user for a system password</p>
</div></div><h1 id='synopsis'><a href='#synopsis'>SYNOPSIS</a></h1><div class='section' data-for='synopsis'><div data-more>
<p><strong>systemd-ask-password [OPTIONS...] [MESSAGE]</strong></p>
</div></div><h1 id='description'><a href='#description'>DESCRIPTION</a></h1><div class='section' data-for='description'><div data-more>
<p><strong>systemd-ask-password</strong> may be used to query a system password or passphrase from the user, using a question message specified on the command line. When run from a TTY it will query a password on the TTY and print it to standard output. When run with no TTY or with <strong>--no-tty</strong> it will use the system-wide query mechanism, which allows active users to respond via several agents, listed below.</p>
<p>The purpose of this tool is to query system-wide passwords — that is passwords not attached to a specific user account. Examples include: unlocking encrypted hard disks when they are plugged in or at boot, entering an SSL certificate passphrase for web and VPN servers.</p>
<p>Existing agents are:</p>
<blockquote>
<p>·</p>
<ul>
<li></li>
</ul>
<p>A boot-time password agent asking the user for passwords using <a href='/8/plymouth'>plymouth</a>(8),</p>
</blockquote>
<blockquote>
<p>·</p>
<ul>
<li></li>
</ul>
<p>A boot-time password agent querying the user directly on the console — <a href='/8/systemd-ask-password-console.service'>systemd-ask-password-console.service</a>(8),</p>
</blockquote>
<blockquote>
<p>·</p>
<ul>
<li></li>
</ul>
<p>An agent requesting password input via a <a href='/1/wall'>wall</a>(1) message — <a href='/8/systemd-ask-password-wall.service'>systemd-ask-password-wall.service</a>(8),</p>
</blockquote>
<blockquote>
<p>·</p>
<ul>
<li></li>
</ul>
<p>A TTY agent that is temporarily spawned during <a href='/1/systemctl'>systemctl</a>(1) invocations,</p>
</blockquote>
<blockquote>
<p>·</p>
<ul>
<li></li>
</ul>
<p>A command line agent which can be started temporarily to process queued password requests — <strong>systemd-tty-ask-password-agent --query</strong>.</p>
</blockquote>
<p>Answering system-wide password queries is a privileged operation, hence all the agents listed above (except for the last one), run as privileged system services. The last one also needs elevated privileges, so should be run through <a href='/8/sudo'>sudo</a>(8) or similar.</p>
<p>Additional password agents may be implemented according to the <strong>systemd Password Agent Specification</strong>[1].</p>
<p>If a password is queried on a TTY, the user may press TAB to hide the asterisks normally shown for each character typed. Pressing Backspace as first key achieves the same effect.</p>
</div></div><h1 id='options'><a href='#options'>OPTIONS</a></h1><div data-for='options' data-hide><div class='section' data-for='options'><div data-more>
<p>The following options are understood:</p>
<p><strong>--icon=</strong></p>
<blockquote>
<p>Specify an icon name alongside the password query, which may be used in all agents supporting graphical display. The icon name should follow the <strong>XDG Icon Naming Specification</strong>[2].</p>
</blockquote>
<p><strong>--id=</strong></p>
<blockquote>
<p>Specify an identifier for this password query. This identifier is freely choosable and allows recognition of queries by involved agents. It should include the subsystem doing the query and the specific object the query is done for. Example: "--id=cryptsetup:/dev/sda5".</p>
</blockquote>
<p><strong>--keyname=</strong></p>
<blockquote>
<p>Configure a kernel keyring key name to use as cache for the password. If set, then the tool will try to push any collected passwords into the kernel keyring of the root user, as a key of the specified name. If combined with <strong>--accept-cached</strong>, it will also try to retrieve such cached passwords from the key in the kernel keyring instead of querying the user right away. By using this option, the kernel keyring may be used as effective cache to avoid repeatedly asking users for passwords, if there are multiple objects that may be unlocked with the same password. The cached key will have a timeout of 2.5min set, after which it will be purged from the kernel keyring. Note that it is possible to cache multiple passwords under the same keyname, in which case they will be stored as <strong>NUL</strong>-separated list of passwords. Use <a href='/1/keyctl'>keyctl</a>(1) to access the cached key via the kernel keyring directly. Example: "--keyname=cryptsetup"</p>
</blockquote>
<p><strong>--credential=</strong></p>
<blockquote>
<p>Configure a credential to read the password from – if it exists. This may be used in conjunction with the <code>LoadCredential=</code> and <code>SetCredential=</code> settings in unit files. See <a href='/5/systemd.exec'>systemd.exec</a>(5) for details. If not specified, defaults to "password". This option has no effect if no credentials directory is passed to the program (i.e. <code>$CREDENTIALS_DIRECTORY</code> is not set) or if the no credential of the specified name exists.</p>
</blockquote>
<p><strong>--timeout=</strong></p>
<blockquote>
<p>Specify the query timeout in seconds. Defaults to 90s. A timeout of 0 waits indefinitely.</p>
</blockquote>
<p><strong>--echo=yes|no|masked</strong></p>
<blockquote>
<p>Controls whether to echo user input. Takes a boolean or the special string "masked", the default being the latter. If enabled the typed characters are echoed literally, which is useful for prompting for usernames and other non-protected data. If disabled the typed characters are not echoed in any form, the user will not get feedback on their input. If set to "masked", an asterisk ("*") is echoed for each character typed. In this mode, if the user hits the tabulator key ("↹"), echo is turned off. (Alternatively, if the user hits the backspace key ("⌫") while no data has been entered otherwise, echo is turned off, too).</p>
</blockquote>
<p><strong>--echo</strong>, <strong>-e</strong></p>
<blockquote>
<p>Equivalent to <strong>--echo=yes</strong>, see above.</p>
</blockquote>
<p><strong>--emoji=yes|no|auto</strong></p>
<blockquote>
<p>Controls whether or not to prefix the query with a lock and key emoji (🔐), if the TTY settings permit this. The default is "auto", which defaults to "yes", unless <strong>--echo=yes</strong> is given.</p>
</blockquote>
<p><strong>--no-tty</strong></p>
<blockquote>
<p>Never ask for password on current TTY even if one is available. Always use agent system.</p>
</blockquote>
<p><strong>--accept-cached</strong></p>
<blockquote>
<p>If passed, accept cached passwords, i.e. passwords previously entered.</p>
</blockquote>
<p><strong>--multiple</strong></p>
<blockquote>
<p>When used in conjunction with <strong>--accept-cached</strong> accept multiple passwords. This will output one password per line.</p>
</blockquote>
<p><strong>--no-output</strong></p>
<blockquote>
<p>Do not print passwords to standard output. This is useful if you want to store a password in kernel keyring with <strong>--keyname=</strong> but do not want it to show up on screen or in logs.</p>
</blockquote>
<p><strong>-n</strong></p>
<blockquote>
<p>By default, when writing the acquired password to standard output it is suffixed by a newline character. This may be turned off with the <strong>-n</strong> switch, similar to the switch of the same name of the <a href='/1/echo'>echo</a>(1) command.</p>
</blockquote>
<p><strong>-h</strong>, <strong>--help</strong></p>
<blockquote>
<p>Print a short help text and exit.</p>
</blockquote>
</div></div></div><h1 id='exit-status'><a href='#exit-status'>EXIT STATUS</a></h1><div data-for='exit-status' data-hide><div class='section' data-for='exit-status'><div data-more>
<p>On success, 0 is returned, a non-zero failure code otherwise.</p>
</div></div></div><h1 id='see-also'><a href='#see-also'>SEE ALSO</a></h1><div class='section' data-for='see-also'><div data-more>
<p><a href='/1/systemd'>systemd</a>(1), <a href='/8/systemd-ask-password-console.service'>systemd-ask-password-console.service</a>(8), <a href='/1/systemd-tty-ask-password-agent'>systemd-tty-ask-password-agent</a>(1), <a href='/1/keyctl'>keyctl</a>(1), <a href='/8/plymouth'>plymouth</a>(8), <a href='/1/wall'>wall</a>(1)</p>
</div></div><h1 id='notes'><a href='#notes'>NOTES</a></h1><div data-for='notes' data-hide><div class='section' data-for='notes'><div data-more>
<ul>
<li><p>systemd Password Agent Specification</p>
<p><a href="https://systemd.io/PASSWORD_AGENTS/">https://systemd.io/PASSWORD_AGENTS/</a></p></li>
<li><p>XDG Icon Naming Specification</p>
<p><a href="http://standards.freedesktop.org/icon-naming-spec/icon-naming-spec-latest.html">http://standards.freedesktop.org/icon-naming-spec/icon-naming-spec-latest.html</a></p></li>
</ul></div></div></div>


        </div>

    </body>

</html>