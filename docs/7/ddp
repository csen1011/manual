<!DOCTYPE html>

<html lang="en">

    <head>

        <meta charset="utf-8">
        <meta name="viewport" content="initial-scale=1, width=device-width">

        <!-- https://getbootstrap.com/ -->
        <link crossorigin="anonymous" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css" integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx" rel="stylesheet">
        <script crossorigin="anonymous" integrity="sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa" src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js"></script>

        <!-- https://jquery.com/ -->
        <script crossorigin="anonymous" integrity="sha512-894YE6QWD5I59HgZOGReFYm4dnWc1Qt5NtvYSaNcOP+u1T9qYdvdihz0PPSiiqn/+/3e7Jo4EaG7TubfWGUrMQ==" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

        <!-- https://fontawesome.com/ -->
        <link crossorigin="anonymous" href="https://use.fontawesome.com/releases/v5.13.0/css/all.css" integrity="sha384-Bfad6CLCknfcloXFOyFnlgtENryhrpZCe29RTifKEixXQZ38WheV+i/6YWSzkz3V" rel="stylesheet">

        <!-- https://www.ubuntu.com/ -->
        <link href="https://assets.ubuntu.com/v1/49a1a858-favicon-32x32.png" rel="icon" type="image/png">

        <link href="/static/rouge.css" rel="stylesheet">

        <script>

            

    $(function() {

        // Ensure all elements are styled the same
        $('pre').addClass('p-3');
        $('table').addClass('table');

        // Add toggles
        $('div.section').each(function(index, element) {

            // Prepare switch
            const $section = $(element);
            const id = 'switch-' + $section.attr('data-for');
            const $switch = $(
                '<div class="form-check form-switch mb-4">' +
                '<input id="' + id + '" class="form-check-input" type="checkbox">' +
                '<label class="form-check-label" for="' + id + '">less comfortable</label>' +
                '</div>'
            );

            // Find comfort levels
            const $less = $section.find('[data-less]');
            const $more = $section.find('[data-more]');

            // If a less-comfortable section exists, check it by default
            if ($less.length) {
                $switch.find('input').prop('checked', true);
            }

            // If only one comfort level exists, disable switch
            if (!$less.length || !$more.length) {
                $switch.find('input').prop('disabled', true);
            }

            // Listen for changes
            $switch.find('input').on('change', function() {
                if ($(this).is(':checked')) {
                    $less.removeClass('d-none');
                    $more.addClass('d-none');
                }
                else {
                    $less.addClass('d-none');
                    $more.removeClass('d-none');
                }
            }).trigger('change');

            // Add switch to DOM section has less-comfy level
            if ($section.find('[data-less]').length) {
                $section.prepend($switch);
            }
        });

        // Hide sections
        $('[data-hide]').each(function(index, element) {
            const $button = $('<button class="btn btn-outline-primary btn-sm" type="button">Show</button>');
            const id = $(element).attr('data-for');
            $(element).before($button);
            $button.on('click', function() {
                $(element).show();
                $(this).remove();
            });
            if (id) {
                $button.attr('data-for', id);
                $('#' + id).children('a').on('click', function() {
                    $button.trigger('click');
                });
            }
            $(element).hide();
        });

        // Show section if in hash
        $(window).on('hashchange', function() {
            const id = window.location.hash.slice(1);
            if (id) {
                $('button[data-for="' + id + '"]').trigger('click');
            }
        });
        $(window).trigger('hashchange');
    });



        </script>

        <script>

            $(function() {

                // Add borders to tables
                $('.table').addClass('table-bordered');

                // Enable popovers
                $('[data-bs-toggle="popover"]').each(function(index, element) {
                    new bootstrap.Popover(element, {
                        boundary: 'viewport',
                        html: true,
                        placement: 'bottom',
                        trigger: 'focus'
                    });
                });

                // Ensure all elements are styled the same
                $('h1').addClass('border-bottom fw-bold h2 mb-3 pb-2 pt-4');
                $('h2').addClass('fw-bold h3');

                // Ensure last heading can be anchored atop page
                $(window).resize(function() {
                    const top = $('h1').last().offset().top;
                    const margin = $(window).height() - ($('body').outerHeight() - top);
                    $('body').css('margin-bottom', Math.max(0, Math.ceil(margin)) + 'px');
                });
                $(window).trigger('resize');

                // Reveal body
                $('body').removeClass('invisible');
            });

        </script>

        <style>

            /* Style popovers */
            .popover {
                font-family: inherit;
                max-width: 100%;
            }

            /* Wrap long words (and URLs, whether linked or not), especially on mobile,
            but not in buttons and not in tables, which should instead scroll horizontally */
            * {
                word-break: break-word;
            }
            button, table * {
                word-break: normal;
            }

            /* Remove underlining */
            a {
                text-decoration: none;
            }
            a:hover {
                text-decoration: underline;
            }
            nav a:hover {
                text-decoration: none;
            }

            /* Match Gmail's yellow */
            a[data-bs-toggle=popover] {
                border-bottom: 2px solid rgb(252, 237, 193);
                box-shadow: inset 0 -2px 0 rgb(252, 237, 193);
                cursor: help;
            }
            a[data-bs-toggle=popover]:hover {
                background-color: rgb(252, 237, 193);
            }

            /* Match pre tags */
            code {
                color: inherit;
            }

            /* A la Jekyll theme */
            code, pre {
                background-color: #f8f9fa;
                border: 1px solid #dee2e6;
                padding: calc(.2rem - 3px) 0.2rem;
            }
            pre code {
                background-color: initial;
                border: initial;
                padding: initial;
            }

            /* Don't shrink these */
            code, pre {
                font-size: inherit;
            }

            /* Don't italicize */
            dl dt {
                font-style: normal;
            }

            /* Don't fill viewport */
            .table {
                width: inherit;
            }

        </style>

        <style>

            

    /* Match dl and p */
    button {
        margin-bottom: 1rem;
    }

    /* Ensure syntax-highlighted code scrolls on iOS, https://stackoverflow.com/a/49592093 */
    pre code {
        white-space: pre;
        word-wrap: normal;
    }
    pre code span {
        white-space: nowrap;
    }

    

        </style>

        <title>CS50 Manual Pages</title>

    </head>

    <body class="font-monospace invisible pb-5">

        <nav class="bg-dark navbar navbar-dark navbar-expand-xl px-4">
            <a class="navbar-brand" href="/"><i class="fas fa-list pe-3"></i>CS50 Manual Pages</a>
        </nav>

        <div class="container-fluid mt-2 px-4">
            

    <h1 id='name'><a href='#name'>NAME</a></h1><div class='section' data-for='name'><div data-more>
<p>ddp - Linux AppleTalk protocol implementation</p>
</div></div><h1 id='synopsis'><a href='#synopsis'>SYNOPSIS</a></h1><div class='section' data-for='synopsis'><div data-more>
<p><strong>#include &lt;sys/socket.h&gt;</strong><br/>
<strong>#include &lt;netatalk/at.h&gt;</strong></p>
<p><code>ddp_socket</code><strong> = socket(AF_APPLETALK, SOCK_DGRAM, 0);</strong><br/>
<code>raw_socket</code><strong> = socket(AF_APPLETALK, SOCK_RAW, </strong><code>protocol</code><strong>);</strong></p>
</div></div><h1 id='description'><a href='#description'>DESCRIPTION</a></h1><div class='section' data-for='description'><div data-more>
<p>Linux implements the AppleTalk protocols described in <code>Inside AppleTalk</code>. Only the DDP layer and AARP are present in the kernel. They are designed to be used via the <strong>netatalk</strong> protocol libraries. This page documents the interface for those who wish or need to use the DDP layer directly.</p>
<p>The communication between AppleTalk and the user program works using a BSD-compatible socket interface. For more information on sockets, see <a href='/7/socket'>socket</a>(7).</p>
<p>An AppleTalk socket is created by calling the <a href='/2/socket'>socket</a>(2) function with a <strong>AF_APPLETALK</strong> socket family argument. Valid socket types are <strong>SOCK_DGRAM</strong> to open a <strong>ddp</strong> socket or <strong>SOCK_RAW</strong> to open a <strong>raw</strong> socket. <code>protocol</code> is the AppleTalk protocol to be received or sent. For <strong>SOCK_RAW</strong> you must specify <strong>ATPROTO_DDP</strong>.</p>
<p>Raw sockets may be opened only by a process with effective user ID 0 or when the process has the <strong>CAP_NET_RAW</strong> capability.</p>
<h2>Address format</h2>
<p>An AppleTalk socket address is defined as a combination of a network number, a node number, and a port number.</p>
<pre><code>struct at_addr {
    unsigned short s_net;
    unsigned char  s_node;
};

struct sockaddr_atalk {
    sa_family_t    sat_family;    /* address family */
    unsigned char  sat_port;      /* port */
    struct at_addr sat_addr;      /* net/node */
};</code></pre>
<p><code>sat_family</code> is always set to <strong>AF_APPLETALK</strong>. <code>sat_port</code> contains the port. The port numbers below 129 are known as <code>reserved ports</code>. Only processes with the effective user ID 0 or the <strong>CAP_NET_BIND_SERVICE</strong> capability may <a href='/2/bind'>bind</a>(2) to these sockets. <code>sat_addr</code> is the host address. The <code>net</code> member of <code>struct at_addr</code> contains the host network in network byte order. The value of <strong>AT_ANYNET</strong> is a wildcard and also implies “this network.” The <code>node</code> member of <code>struct at_addr</code> contains the host node number. The value of <strong>AT_ANYNODE</strong> is a wildcard and also implies “this node.” The value of <strong>ATADDR_BCAST</strong> is a link local broadcast address.</p>
<h2>Socket options</h2>
<p>No protocol-specific socket options are supported.</p>
<h2>/proc interfaces</h2>
<p>IP supports a set of <code>/proc</code> interfaces to configure some global AppleTalk parameters. The parameters can be accessed by reading or writing files in the directory <code>/proc/sys/net/atalk/</code>.</p>
<dl>
<dt><code>aarp-expiry-time</code></dt>
<dd><p>The time interval (in seconds) before an AARP cache entry expires.</p>
</dd>
<dt><code>aarp-resolve-time</code></dt>
<dd><p>The time interval (in seconds) before an AARP cache entry is resolved.</p>
</dd>
<dt><code>aarp-retransmit-limit</code></dt>
<dd><p>The number of retransmissions of an AARP query before the node is declared dead.</p>
</dd>
<dt><code>aarp-tick-time</code></dt>
<dd><p>The timer rate (in seconds) for the timer driving AARP.</p>
</dd>
</dl>
<p>The default values match the specification and should never need to be changed.</p>
<h2>Ioctls</h2>
<p>All ioctls described in <a href='/7/socket'>socket</a>(7) apply to DDP.</p>
</div></div><h1 id='errors'><a href='#errors'>ERRORS</a></h1><div data-for='errors' data-hide><div class='section' data-for='errors'><div data-more>
<dl>
<dt><strong>EACCES</strong></dt>
<dd><p>The user tried to execute an operation without the necessary permissions. These include sending to a broadcast address without having the broadcast flag set, and trying to bind to a reserved port without effective user ID 0 or <strong>CAP_NET_BIND_SERVICE</strong>.</p>
</dd>
<dt><strong>EADDRINUSE</strong></dt>
<dd><p>Tried to bind to an address already in use.</p>
</dd>
<dt><strong>EADDRNOTAVAIL</strong></dt>
<dd><p>A nonexistent interface was requested or the requested source address was not local.</p>
</dd>
<dt><strong>EAGAIN</strong></dt>
<dd><p>Operation on a nonblocking socket would block.</p>
</dd>
<dt><strong>EALREADY</strong></dt>
<dd><p>A connection operation on a nonblocking socket is already in progress.</p>
</dd>
<dt><strong>ECONNABORTED</strong></dt>
<dd><p>A connection was closed during an <a href='/2/accept'>accept</a>(2).</p>
</dd>
<dt><strong>EHOSTUNREACH</strong></dt>
<dd><p>No routing table entry matches the destination address.</p>
</dd>
<dt><strong>EINVAL</strong></dt>
<dd><p>Invalid argument passed.</p>
</dd>
<dt><strong>EISCONN</strong></dt>
<dd><p><a href='/2/connect'>connect</a>(2) was called on an already connected socket.</p>
</dd>
<dt><strong>EMSGSIZE</strong></dt>
<dd><p>Datagram is bigger than the DDP MTU.</p>
</dd>
<dt><strong>ENODEV</strong></dt>
<dd><p>Network device not available or not capable of sending IP.</p>
</dd>
<dt><strong>ENOENT</strong></dt>
<dd><p><strong>SIOCGSTAMP</strong> was called on a socket where no packet arrived.</p>
</dd>
<dt><strong>ENOMEM</strong> and <strong>ENOBUFS</strong></dt>
<dd><p>Not enough memory available.</p>
</dd>
<dt><strong>ENOPKG</strong></dt>
<dd><p>A kernel subsystem was not configured.</p>
</dd>
<dt><strong>ENOPROTOOPT</strong> and <strong>EOPNOTSUPP</strong></dt>
<dd><p>Invalid socket option passed.</p>
</dd>
<dt><strong>ENOTCONN</strong></dt>
<dd><p>The operation is defined only on a connected socket, but the socket wasn't connected.</p>
</dd>
<dt><strong>EPERM</strong></dt>
<dd><p>User doesn't have permission to set high priority, make a configuration change, or send signals to the requested process or group.</p>
</dd>
<dt><strong>EPIPE</strong></dt>
<dd><p>The connection was unexpectedly closed or shut down by the other end.</p>
</dd>
<dt><strong>ESOCKTNOSUPPORT</strong></dt>
<dd><p>The socket was unconfigured, or an unknown socket type was requested.</p>
</dd>
</dl>
</div></div></div><h1 id='versions'><a href='#versions'>VERSIONS</a></h1><div data-for='versions' data-hide><div class='section' data-for='versions'><div data-more>
<p>AppleTalk is supported by Linux 2.0 or higher. The <code>/proc</code> interfaces exist since Linux 2.2.</p>
</div></div></div><h1 id='notes'><a href='#notes'>NOTES</a></h1><div data-for='notes' data-hide><div class='section' data-for='notes'><div data-more>
<p>Be very careful with the <strong>SO_BROADCAST</strong> option; it is not privileged in Linux. It is easy to overload the network with careless sending to broadcast addresses.</p>
<h2>Compatibility</h2>
<p>The basic AppleTalk socket interface is compatible with <strong>netatalk</strong> on BSD-derived systems. Many BSD systems fail to check <strong>SO_BROADCAST</strong> when sending broadcast frames; this can lead to compatibility problems.</p>
<p>The raw socket mode is unique to Linux and exists to support the alternative CAP package and AppleTalk monitoring tools more easily.</p>
</div></div></div><h1 id='bugs'><a href='#bugs'>BUGS</a></h1><div data-for='bugs' data-hide><div class='section' data-for='bugs'><div data-more>
<p>There are too many inconsistent error values.</p>
<p>The ioctls used to configure routing tables, devices, AARP tables, and other devices are not yet described.</p>
</div></div></div><h1 id='see-also'><a href='#see-also'>SEE ALSO</a></h1><div class='section' data-for='see-also'><div data-more>
<p><a href='/2/recvmsg'>recvmsg</a>(2), <a href='/2/sendmsg'>sendmsg</a>(2), <a href='/7/capabilities'>capabilities</a>(7), <a href='/7/socket'>socket</a>(7)</p>
</div></div><h1 id='colophon'><a href='#colophon'>COLOPHON</a></h1><div data-for='colophon' data-hide><div class='section' data-for='colophon'><div data-more>
<p>This page is part of release 5.10 of the Linux <code>man-pages</code> project. A description of the project, information about reporting bugs, and the latest version of this page, can be found at <a href="https://www.kernel.org/doc/man-pages/">https://www.kernel.org/doc/man-pages/</a>.</p></div></div></div>


        </div>

    </body>

</html>