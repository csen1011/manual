<!DOCTYPE html>

<html lang="en">

    <head>

        <meta charset="utf-8">
        <meta name="viewport" content="initial-scale=1, width=device-width">

        <!-- https://getbootstrap.com/ -->
        <link crossorigin="anonymous" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css" integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx" rel="stylesheet">
        <script crossorigin="anonymous" integrity="sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa" src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js"></script>

        <!-- https://jquery.com/ -->
        <script crossorigin="anonymous" integrity="sha512-894YE6QWD5I59HgZOGReFYm4dnWc1Qt5NtvYSaNcOP+u1T9qYdvdihz0PPSiiqn/+/3e7Jo4EaG7TubfWGUrMQ==" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

        <!-- https://fontawesome.com/ -->
        <link crossorigin="anonymous" href="https://use.fontawesome.com/releases/v5.13.0/css/all.css" integrity="sha384-Bfad6CLCknfcloXFOyFnlgtENryhrpZCe29RTifKEixXQZ38WheV+i/6YWSzkz3V" rel="stylesheet">

        <!-- https://www.ubuntu.com/ -->
        <link href="https://assets.ubuntu.com/v1/49a1a858-favicon-32x32.png" rel="icon" type="image/png">

        <link href="/static/rouge.css" rel="stylesheet">

        <script>

            

    $(function() {

        // Ensure all elements are styled the same
        $('pre').addClass('p-3');
        $('table').addClass('table');

        // Add toggles
        $('div.section').each(function(index, element) {

            // Prepare switch
            const $section = $(element);
            const id = 'switch-' + $section.attr('data-for');
            const $switch = $(
                '<div class="form-check form-switch mb-4">' +
                '<input id="' + id + '" class="form-check-input" type="checkbox">' +
                '<label class="form-check-label" for="' + id + '">less comfortable</label>' +
                '</div>'
            );

            // Find comfort levels
            const $less = $section.find('[data-less]');
            const $more = $section.find('[data-more]');

            // If a less-comfortable section exists, check it by default
            if ($less.length) {
                $switch.find('input').prop('checked', true);
            }

            // If only one comfort level exists, disable switch
            if (!$less.length || !$more.length) {
                $switch.find('input').prop('disabled', true);
            }

            // Listen for changes
            $switch.find('input').on('change', function() {
                if ($(this).is(':checked')) {
                    $less.removeClass('d-none');
                    $more.addClass('d-none');
                }
                else {
                    $less.addClass('d-none');
                    $more.removeClass('d-none');
                }
            }).trigger('change');

            // Add switch to DOM section has less-comfy level
            if ($section.find('[data-less]').length) {
                $section.prepend($switch);
            }
        });

        // Hide sections
        $('[data-hide]').each(function(index, element) {
            const $button = $('<button class="btn btn-outline-primary btn-sm" type="button">Show</button>');
            const id = $(element).attr('data-for');
            $(element).before($button);
            $button.on('click', function() {
                $(element).show();
                $(this).remove();
            });
            if (id) {
                $button.attr('data-for', id);
                $('#' + id).children('a').on('click', function() {
                    $button.trigger('click');
                });
            }
            $(element).hide();
        });

        // Show section if in hash
        $(window).on('hashchange', function() {
            const id = window.location.hash.slice(1);
            if (id) {
                $('button[data-for="' + id + '"]').trigger('click');
            }
        });
        $(window).trigger('hashchange');
    });



        </script>

        <script>

            $(function() {

                // Add borders to tables
                $('.table').addClass('table-bordered');

                // Enable popovers
                $('[data-bs-toggle="popover"]').each(function(index, element) {
                    new bootstrap.Popover(element, {
                        boundary: 'viewport',
                        html: true,
                        placement: 'bottom',
                        trigger: 'focus'
                    });
                });

                // Ensure all elements are styled the same
                $('h1').addClass('border-bottom fw-bold h2 mb-3 pb-2 pt-4');
                $('h2').addClass('fw-bold h3');

                // Ensure last heading can be anchored atop page
                $(window).resize(function() {
                    const top = $('h1').last().offset().top;
                    const margin = $(window).height() - ($('body').outerHeight() - top);
                    $('body').css('margin-bottom', Math.max(0, Math.ceil(margin)) + 'px');
                });
                $(window).trigger('resize');

                // Reveal body
                $('body').removeClass('invisible');
            });

        </script>

        <style>

            /* Style popovers */
            .popover {
                font-family: inherit;
                max-width: 100%;
            }

            /* Wrap long words (and URLs, whether linked or not), especially on mobile,
            but not in buttons and not in tables, which should instead scroll horizontally */
            * {
                word-break: break-word;
            }
            button, table * {
                word-break: normal;
            }

            /* Remove underlining */
            a {
                text-decoration: none;
            }
            a:hover {
                text-decoration: underline;
            }
            nav a:hover {
                text-decoration: none;
            }

            /* Match Gmail's yellow */
            a[data-bs-toggle=popover] {
                border-bottom: 2px solid rgb(252, 237, 193);
                box-shadow: inset 0 -2px 0 rgb(252, 237, 193);
                cursor: help;
            }
            a[data-bs-toggle=popover]:hover {
                background-color: rgb(252, 237, 193);
            }

            /* Match pre tags */
            code {
                color: inherit;
            }

            /* A la Jekyll theme */
            code, pre {
                background-color: #f8f9fa;
                border: 1px solid #dee2e6;
                padding: calc(.2rem - 3px) 0.2rem;
            }
            pre code {
                background-color: initial;
                border: initial;
                padding: initial;
            }

            /* Don't shrink these */
            code, pre {
                font-size: inherit;
            }

            /* Don't italicize */
            dl dt {
                font-style: normal;
            }

            /* Don't fill viewport */
            .table {
                width: inherit;
            }

        </style>

        <style>

            

    /* Match dl and p */
    button {
        margin-bottom: 1rem;
    }

    /* Ensure syntax-highlighted code scrolls on iOS, https://stackoverflow.com/a/49592093 */
    pre code {
        white-space: pre;
        word-wrap: normal;
    }
    pre code span {
        white-space: nowrap;
    }

    

        </style>

        <title>CS50 Manual Pages</title>

    </head>

    <body class="font-monospace invisible pb-5">

        <nav class="bg-dark navbar navbar-dark navbar-expand-xl px-4">
            <a class="navbar-brand" href="/"><i class="fas fa-list pe-3"></i>CS50 Manual Pages</a>
        </nav>

        <div class="container-fluid mt-2 px-4">
            

    <h1 id='name'><a href='#name'>NAME</a></h1><div class='section' data-for='name'><div data-more>
<p>rcmd, rresvport, iruserok, ruserok, rcmd_af, <a data-bs-content='This is the man page for &lt;code&gt;rresvport_af&lt;/code&gt; and 7 related functions.' data-bs-toggle='popover' tabindex='0'>rresvport_af</a>, iruserok_af, ruserok_af - routines for returning a stream to a remote command</p>
</div></div><h1 id='synopsis'><a href='#synopsis'>SYNOPSIS</a></h1><div class='section' data-for='synopsis'><div data-more>
<pre><code><a data-bs-content='Be sure this line is atop your own code.' data-bs-toggle='popover' tabindex='0'>#include &lt;netdb.h&gt;</a> /* Or &lt;unistd.h&gt; on some systems */

int rcmd(<a data-bs-content='Think of this as a &lt;code&gt;string&lt;/code&gt;.' data-bs-toggle='popover' tabindex='0'>char *</a>*ahost, unsigned short inport, <a data-bs-content='Think of this as a &lt;code&gt;string&lt;/code&gt;.' data-bs-toggle='popover' tabindex='0'>const char *</a>locuser,
 <a data-bs-content='Think of this as a &lt;code&gt;string&lt;/code&gt;.' data-bs-toggle='popover' tabindex='0'>const char *</a>remuser, <a data-bs-content='Think of this as a &lt;code&gt;string&lt;/code&gt;.' data-bs-toggle='popover' tabindex='0'>const char *</a>cmd, int *fd2p);

int rresvport(int *port);

int iruserok(uint32_t raddr, int superuser,
 <a data-bs-content='Think of this as a &lt;code&gt;string&lt;/code&gt;.' data-bs-toggle='popover' tabindex='0'>const char *</a>ruser, <a data-bs-content='Think of this as a &lt;code&gt;string&lt;/code&gt;.' data-bs-toggle='popover' tabindex='0'>const char *</a>luser);

int ruserok(<a data-bs-content='Think of this as a &lt;code&gt;string&lt;/code&gt;.' data-bs-toggle='popover' tabindex='0'>const char *</a>rhost, int superuser,
 <a data-bs-content='Think of this as a &lt;code&gt;string&lt;/code&gt;.' data-bs-toggle='popover' tabindex='0'>const char *</a>ruser, <a data-bs-content='Think of this as a &lt;code&gt;string&lt;/code&gt;.' data-bs-toggle='popover' tabindex='0'>const char *</a>luser);

int rcmd_af(<a data-bs-content='Think of this as a &lt;code&gt;string&lt;/code&gt;.' data-bs-toggle='popover' tabindex='0'>char *</a>*ahost, unsigned short inport, <a data-bs-content='Think of this as a &lt;code&gt;string&lt;/code&gt;.' data-bs-toggle='popover' tabindex='0'>const char *</a>locuser,
 <a data-bs-content='Think of this as a &lt;code&gt;string&lt;/code&gt;.' data-bs-toggle='popover' tabindex='0'>const char *</a>remuser, <a data-bs-content='Think of this as a &lt;code&gt;string&lt;/code&gt;.' data-bs-toggle='popover' tabindex='0'>const char *</a>cmd, int *fd2p,
 sa_family_t af);

int rresvport_af(int *port, sa_family_t af);

int iruserok_af(const void *raddr, int superuser,
 <a data-bs-content='Think of this as a &lt;code&gt;string&lt;/code&gt;.' data-bs-toggle='popover' tabindex='0'>const char *</a>ruser, <a data-bs-content='Think of this as a &lt;code&gt;string&lt;/code&gt;.' data-bs-toggle='popover' tabindex='0'>const char *</a>luser, sa_family_t af);

int ruserok_af(<a data-bs-content='Think of this as a &lt;code&gt;string&lt;/code&gt;.' data-bs-toggle='popover' tabindex='0'>const char *</a>rhost, int superuser,
 <a data-bs-content='Think of this as a &lt;code&gt;string&lt;/code&gt;.' data-bs-toggle='popover' tabindex='0'>const char *</a>ruser, <a data-bs-content='Think of this as a &lt;code&gt;string&lt;/code&gt;.' data-bs-toggle='popover' tabindex='0'>const char *</a>luser, sa_family_t af);</code></pre>
<blockquote>
<p>Feature Test Macro Requirements for glibc (see <a href='/7/feature_test_macros'>feature_test_macros</a>(7)):</p>
</blockquote><div data-hide>
<p><a href='rcmd'>rcmd</a>(), <a href='rcmd_af'>rcmd_af</a>(), <a href='rresvport'>rresvport</a>(), <a href='rresvport_af'>rresvport_af</a>(), <a href='iruserok'>iruserok</a>(), <a href='iruserok_af'>iruserok_af</a>(), <a href='ruserok'>ruserok</a>(), <a href='ruserok_af'>ruserok_af</a>(): Since glibc 2.19: _DEFAULT_SOURCE Glibc 2.19 and earlier: _BSD_SOURCE</p>
</div></div></div><h1 id='description'><a href='#description'>DESCRIPTION</a></h1><div class='section' data-for='description'><div data-more>
<p>The <a href='rcmd'>rcmd</a>() function is used by the superuser to execute a command on a remote machine using an authentication scheme based on privileged port numbers. The <a href='rresvport'>rresvport</a>() function returns a file descriptor to a socket with an address in the privileged port space. The <a href='iruserok'>iruserok</a>() and <a href='ruserok'>ruserok</a>() functions are used by servers to authenticate clients requesting service with <a href='rcmd'>rcmd</a>(). All four functions are used by the <a href='/8/rshd'>rshd</a>(8) server (among others).</p>
<h2>rcmd()</h2>
<p>The <a href='rcmd'>rcmd</a>() function looks up the host <code>*ahost</code> using <a href='/3/gethostbyname'>gethostbyname</a>(3), returning -1 if the host does not exist. Otherwise, <code>*ahost</code> is set to the standard name of the host and a connection is established to a server residing at the well-known Internet port <code>inport</code>.</p>
<p>If the connection succeeds, a socket in the Internet domain of type <strong>SOCK_STREAM</strong> is returned to the caller, and given to the remote command as <code>stdin</code> and <code>stdout</code>. If <code>fd2p</code> is nonzero, then an auxiliary channel to a control process will be set up, and a file descriptor for it will be placed in <code>*fd2p</code>. The control process will return diagnostic output from the command (unit 2) on this channel, and will also accept bytes on this channel as being UNIX signal numbers, to be forwarded to the process group of the command. If <code>fd2p</code> is 0, then the <code>stderr</code> (unit 2 of the remote command) will be made the same as the <code>stdout</code> and no provision is made for sending arbitrary signals to the remote process, although you may be able to get its attention by using out-of-band data.</p>
<p>The protocol is described in detail in <a href='/8/rshd'>rshd</a>(8).</p>
<h2>rresvport()</h2>
<p>The <a href='rresvport'>rresvport</a>() function is used to obtain a socket with a privileged port bound to it. This socket is suitable for use by <a href='rcmd'>rcmd</a>() and several other functions. Privileged ports are those in the range 0 to 1023. Only a privileged process (on Linux: a process that has the <strong>CAP_NET_BIND_SERVICE</strong> capability in the user namespace governing its network namespace). is allowed to bind to a privileged port. In the glibc implementation, this function restricts its search to the ports from 512 to 1023. The <code>port</code> argument is value-result: the value it supplies to the call is used as the starting point for a circular search of the port range; on (successful) return, it contains the port number that was bound to. The <a href='iruserok'>iruserok</a>() and <a href='ruserok'>ruserok</a>() functions take a remote host's IP address or name, respectively, two usernames and a flag indicating whether the local user's name is that of the superuser. Then, if the user is <code>not</code> the superuser, it checks the <code>/etc/hosts.equiv</code> file. If that lookup is not done, or is unsuccessful, the <code>.rhosts</code> in the local user's home directory is checked to see if the request for service is allowed.</p>
<p>If this file does not exist, is not a regular file, is owned by anyone other than the user or the superuser, is writable by anyone other than the owner, or is hardlinked anywhere, the check automatically fails. Zero is returned if the machine name is listed in the <code>hosts.equiv</code> file, or the host and remote username are found in the <code>.rhosts</code> file; otherwise <a href='iruserok'>iruserok</a>() and <a href='ruserok'>ruserok</a>() return -1. If the local domain (as obtained from <a href='/2/gethostname'>gethostname</a>(2)) is the same as the remote domain, only the machine name need be specified.</p>
<p>If the IP address of the remote host is known, <a href='iruserok'>iruserok</a>() should be used in preference to <a href='ruserok'>ruserok</a>(), as it does not require trusting the DNS server for the remote host's domain.</p>
<h2>*_af() variants</h2>
<p>All of the functions described above work with IPv4 (<strong>AF_INET</strong>) sockets. The "_af" variants take an extra argument that allows the socket address family to be specified. For these functions, the <code>af</code> argument can be specified as <strong>AF_INET</strong> or <strong>AF_INET6</strong>. In addition, <a href='rcmd_af'>rcmd_af</a>() supports the use of <strong>AF_UNSPEC</strong>.</p>
</div></div><h1 id='return-value'><a href='#return-value'>RETURN VALUE</a></h1><div class='section' data-for='return-value'><div data-more>
<p>The <a href='rcmd'>rcmd</a>() function returns a valid socket descriptor on success. It returns -1 on error and prints a diagnostic message on the standard error.</p>
<p>The <a href='rresvport'>rresvport</a>() function returns a valid, bound socket descriptor on success. It returns -1 on error with the global value <code>errno</code> set according to the reason for failure. The error code <strong>EAGAIN</strong> is overloaded to mean "All network ports in use."</p>
<p>For information on the return from <a href='ruserok'>ruserok</a>() and <a href='iruserok'>iruserok</a>(), see above.</p>
</div></div><h1 id='versions'><a href='#versions'>VERSIONS</a></h1><div data-for='versions' data-hide><div class='section' data-for='versions'><div data-more>
<p>The functions <a href='iruserok_af'>iruserok_af</a>(), <a href='rcmd_af'>rcmd_af</a>(), <a href='rresvport_af'>rresvport_af</a>(), and <a href='ruserok_af'>ruserok_af</a>() functions are provide in glibc since version 2.2.</p>
</div></div></div><h1 id='attributes'><a href='#attributes'>ATTRIBUTES</a></h1><div data-for='attributes' data-hide><div class='section' data-for='attributes'><div data-more>
<p>For an explanation of the terms used in this section, see <a href='/7/attributes'>attributes</a>(7).</p>
<table>
<tbody>
<tr class="odd">
<td style="text-align: left;">Interface</td>
<td style="text-align: left;">Attribute</td>
<td style="text-align: left;">Value</td>
</tr>
<tr class="even">
<td style="text-align: left;"><a href='rcmd'>rcmd</a>(), <a href='rcmd_af'>rcmd_af</a>()</td>
<td style="text-align: left;">Thread safety</td>
<td style="text-align: left;">MT-Unsafe</td>
</tr>
<tr class="odd">
<td style="text-align: left;"><a href='rresvport'>rresvport</a>(), <a href='rresvport_af'>rresvport_af</a>()</td>
<td style="text-align: left;">Thread safety</td>
<td style="text-align: left;">MT-Safe</td>
</tr>
<tr class="even">
<td style="text-align: left;"><a href='iruserok'>iruserok</a>(), <a href='ruserok'>ruserok</a>(),<br/>
<a href='iruserok_af'>iruserok_af</a>(), <a href='ruserok_af'>ruserok_af</a>()</td>
<td style="text-align: left;">Thread safety</td>
<td style="text-align: left;">MT-Safe locale</td>
</tr>
</tbody>
</table>
</div></div></div><h1 id='conforming-to'><a href='#conforming-to'>CONFORMING TO</a></h1><div data-for='conforming-to' data-hide><div class='section' data-for='conforming-to'><div data-more>
<p>Not in POSIX.1. Present on the BSDs, Solaris, and many other systems. These functions appeared in 4.2BSD. The "_af" variants are more recent additions, and are not present on as wide a range of systems.</p>
</div></div></div><h1 id='bugs'><a href='#bugs'>BUGS</a></h1><div data-for='bugs' data-hide><div class='section' data-for='bugs'><div data-more>
<p><a href='iruserok'>iruserok</a>() and <a href='iruserok_af'>iruserok_af</a>() are declared in glibc headers only since version 2.12.</p>
</div></div></div><h1 id='see-also'><a href='#see-also'>SEE ALSO</a></h1><div class='section' data-for='see-also'><div data-more>
<p><a href='/1/rlogin'>rlogin</a>(1), <a href='/1/rsh'>rsh</a>(1), <a href='/3/rexec'>rexec</a>(3), <a href='/8/rexecd'>rexecd</a>(8), <a href='/8/rlogind'>rlogind</a>(8), <a href='/8/rshd'>rshd</a>(8)</p>
</div></div><h1 id='colophon'><a href='#colophon'>COLOPHON</a></h1><div data-for='colophon' data-hide><div class='section' data-for='colophon'><div data-more>
<p>This page is part of release 5.10 of the Linux <code>man-pages</code> project. A description of the project, information about reporting bugs, and the latest version of this page, can be found at <a href="https://www.kernel.org/doc/man-pages/">https://www.kernel.org/doc/man-pages/</a>.</p></div></div></div>


        </div>

    </body>

</html>