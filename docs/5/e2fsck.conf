<!DOCTYPE html>

<html lang="en">

    <head>

        <meta charset="utf-8">
        <meta name="viewport" content="initial-scale=1, width=device-width">

        <!-- https://getbootstrap.com/ -->
        <link crossorigin="anonymous" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css" integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx" rel="stylesheet">
        <script crossorigin="anonymous" integrity="sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa" src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js"></script>

        <!-- https://jquery.com/ -->
        <script crossorigin="anonymous" integrity="sha512-894YE6QWD5I59HgZOGReFYm4dnWc1Qt5NtvYSaNcOP+u1T9qYdvdihz0PPSiiqn/+/3e7Jo4EaG7TubfWGUrMQ==" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

        <!-- https://fontawesome.com/ -->
        <link crossorigin="anonymous" href="https://use.fontawesome.com/releases/v5.13.0/css/all.css" integrity="sha384-Bfad6CLCknfcloXFOyFnlgtENryhrpZCe29RTifKEixXQZ38WheV+i/6YWSzkz3V" rel="stylesheet">

        <!-- https://www.ubuntu.com/ -->
        <link href="https://assets.ubuntu.com/v1/49a1a858-favicon-32x32.png" rel="icon" type="image/png">

        <link href="/static/rouge.css" rel="stylesheet">

        <script>

            

    $(function() {

        // Ensure all elements are styled the same
        $('pre').addClass('p-3');
        $('table').addClass('table');

        // Add toggles
        $('div.section').each(function(index, element) {

            // Prepare switch
            const $section = $(element);
            const id = 'switch-' + $section.attr('data-for');
            const $switch = $(
                '<div class="form-check form-switch mb-4">' +
                '<input id="' + id + '" class="form-check-input" type="checkbox">' +
                '<label class="form-check-label" for="' + id + '">less comfortable</label>' +
                '</div>'
            );

            // Find comfort levels
            const $less = $section.find('[data-less]');
            const $more = $section.find('[data-more]');

            // If a less-comfortable section exists, check it by default
            if ($less.length) {
                $switch.find('input').prop('checked', true);
            }

            // If only one comfort level exists, disable switch
            if (!$less.length || !$more.length) {
                $switch.find('input').prop('disabled', true);
            }

            // Listen for changes
            $switch.find('input').on('change', function() {
                if ($(this).is(':checked')) {
                    $less.removeClass('d-none');
                    $more.addClass('d-none');
                }
                else {
                    $less.addClass('d-none');
                    $more.removeClass('d-none');
                }
            }).trigger('change');

            // Add switch to DOM section has less-comfy level
            if ($section.find('[data-less]').length) {
                $section.prepend($switch);
            }
        });

        // Hide sections
        $('[data-hide]').each(function(index, element) {
            const $button = $('<button class="btn btn-outline-primary btn-sm" type="button">Show</button>');
            const id = $(element).attr('data-for');
            $(element).before($button);
            $button.on('click', function() {
                $(element).show();
                $(this).remove();
            });
            if (id) {
                $button.attr('data-for', id);
                $('#' + id).children('a').on('click', function() {
                    $button.trigger('click');
                });
            }
            $(element).hide();
        });

        // Show section if in hash
        $(window).on('hashchange', function() {
            const id = window.location.hash.slice(1);
            if (id) {
                $('button[data-for="' + id + '"]').trigger('click');
            }
        });
        $(window).trigger('hashchange');
    });



        </script>

        <script>

            $(function() {

                // Add borders to tables
                $('.table').addClass('table-bordered');

                // Enable popovers
                $('[data-bs-toggle="popover"]').each(function(index, element) {
                    new bootstrap.Popover(element, {
                        boundary: 'viewport',
                        html: true,
                        placement: 'bottom',
                        trigger: 'focus'
                    });
                });

                // Ensure all elements are styled the same
                $('h1').addClass('border-bottom fw-bold h2 mb-3 pb-2 pt-4');
                $('h2').addClass('fw-bold h3');

                // Ensure last heading can be anchored atop page
                $(window).resize(function() {
                    const top = $('h1').last().offset().top;
                    const margin = $(window).height() - ($('body').outerHeight() - top);
                    $('body').css('margin-bottom', Math.max(0, Math.ceil(margin)) + 'px');
                });
                $(window).trigger('resize');

                // Reveal body
                $('body').removeClass('invisible');
            });

        </script>

        <style>

            /* Style popovers */
            .popover {
                font-family: inherit;
                max-width: 100%;
            }

            /* Wrap long words (and URLs, whether linked or not), especially on mobile,
            but not in buttons and not in tables, which should instead scroll horizontally */
            * {
                word-break: break-word;
            }
            button, table * {
                word-break: normal;
            }

            /* Remove underlining */
            a {
                text-decoration: none;
            }
            a:hover {
                text-decoration: underline;
            }
            nav a:hover {
                text-decoration: none;
            }

            /* Match Gmail's yellow */
            a[data-bs-toggle=popover] {
                border-bottom: 2px solid rgb(252, 237, 193);
                box-shadow: inset 0 -2px 0 rgb(252, 237, 193);
                cursor: help;
            }
            a[data-bs-toggle=popover]:hover {
                background-color: rgb(252, 237, 193);
            }

            /* Match pre tags */
            code {
                color: inherit;
            }

            /* A la Jekyll theme */
            code, pre {
                background-color: #f8f9fa;
                border: 1px solid #dee2e6;
                padding: calc(.2rem - 3px) 0.2rem;
            }
            pre code {
                background-color: initial;
                border: initial;
                padding: initial;
            }

            /* Don't shrink these */
            code, pre {
                font-size: inherit;
            }

            /* Don't italicize */
            dl dt {
                font-style: normal;
            }

            /* Don't fill viewport */
            .table {
                width: inherit;
            }

        </style>

        <style>

            

    /* Match dl and p */
    button {
        margin-bottom: 1rem;
    }

    /* Ensure syntax-highlighted code scrolls on iOS, https://stackoverflow.com/a/49592093 */
    pre code {
        white-space: pre;
        word-wrap: normal;
    }
    pre code span {
        white-space: nowrap;
    }

    

        </style>

        <title>CS50 Manual Pages</title>

    </head>

    <body class="font-monospace invisible pb-5">

        <nav class="bg-dark navbar navbar-dark navbar-expand-xl px-4">
            <a class="navbar-brand" href="/"><i class="fas fa-list pe-3"></i>CS50 Manual Pages</a>
        </nav>

        <div class="container-fluid mt-2 px-4">
            

    <h1 id='name'><a href='#name'>NAME</a></h1><div class='section' data-for='name'><div data-more>
<p>e2fsck.conf - Configuration file for e2fsck</p>
</div></div><h1 id='description'><a href='#description'>DESCRIPTION</a></h1><div class='section' data-for='description'><div data-more>
<p><code>e2fsck.conf</code> is the configuration file for <a href='/8/e2fsck'>e2fsck</a>(8). It controls the default behavior of <a href='/8/e2fsck'>e2fsck</a>(8) while it is checking ext2, ext3, or ext4 file systems.</p>
<p>The <code>e2fsck.conf</code> file uses an INI-style format. Stanzas, or top-level sections, are delimited by square braces: [ ]. Within each section, each line defines a relation, which assigns tags to values, or to a subsection, which contains further relations or subsections. An example of the INI-style format used by this configuration file follows below:</p>
<p>[section1]<br/>
tag1 = value_a<br/>
tag1 = value_b<br/>
tag2 = value_c</p>
<p>[section 2]<br/>
tag3 = {<br/>
subtag1 = subtag_value_a<br/>
subtag1 = subtag_value_b<br/>
subtag2 = subtag_value_c<br/>
}<br/>
tag1 = value_d<br/>
tag2 = value_e<br/>
}</p>
<p>Comments are delimited by a semicolon (';') or a hash ('#') character at the beginning of the comment, and are terminated by the end of line character.</p>
<p>Tags and values must be quoted using double quotes if they contain spaces. Within a quoted string, the standard backslash interpretations apply: "\n" (for the newline character), "\t" (for the tab character), "\b" (for the backspace character), and "\\" (for the backslash character).</p>
<p>The following stanzas are used in the <code>e2fsck.conf</code> file. They will be described in more detail in future sections of this document.</p>
<dl>
<dt><code>[options]</code></dt>
<dd><p>This stanza contains general configuration parameters for <strong>e2fsck</strong>'s behavior.</p>
</dd>
<dt><code>[defaults]</code></dt>
<dd><p>Contains relations which define the default parameters used by <a href='/8/e2fsck'>e2fsck</a>(8). In general, these defaults may be overridden by command-line options provided by the user.</p>
</dd>
<dt><code>[problems]</code></dt>
<dd><p>This stanza allows the administrator to reconfigure how e2fsck handles various file system inconsistencies.</p>
</dd>
<dt><code>[scratch_files]</code></dt>
<dd><p>This stanza controls when e2fsck will attempt to use scratch files to reduce the need for memory.</p>
</dd>
</dl>
</div></div><h1 id='the-options-stanza'><a href='#the-options-stanza'>THE [OPTIONS] STANZA</a></h1><div data-for='the-options-stanza' data-hide><div class='section' data-for='the-options-stanza'><div data-more>
<p>The following relations are defined in the <code>[options]</code> stanza.</p>
<dl>
<dt><code>allow_cancellation</code></dt>
<dd><p>If this relation is set to a boolean value of true, then if the user interrupts e2fsck using ^C, and the file system is not explicitly flagged as containing errors, e2fsck will exit with an exit status of 0 instead of 32. This setting defaults to false.</p>
</dd>
<dt><code>accept_time_fudge</code></dt>
<dd><p>Unfortunately, due to Windows' unfortunate design decision to configure the hardware clock to tick localtime, instead of the more proper and less error-prone UTC time, many users end up in the situation where the system clock is incorrectly set at the time when e2fsck is run.</p>
<p>Historically this was usually due to some distributions having buggy init scripts and/or installers that didn't correctly detect this case and take appropriate countermeasures. Unfortunately, this is occasionally true even today, usually due to a buggy or misconfigured virtualization manager or the installer not having access to a network time server during the installation process. So by default, we allow the superblock times to be fudged by up to 24 hours. This can be disabled by setting <code>accept_time_fudge</code> to the boolean value of false. This setting defaults to true.</p>
</dd>
<dt><code>broken_system_clock</code></dt>
<dd><p>The <a href='/8/e2fsck'>e2fsck</a>(8) program has some heuristics that assume that the system clock is correct. In addition, many system programs make similar assumptions. For example, the UUID library depends on time not going backwards in order for it to be able to make its guarantees about issuing universally unique ID's. Systems with broken system clocks, are well, broken. However, broken system clocks, particularly in embedded systems, do exist. E2fsck will attempt to use heuristics to determine if the time can not be trusted; and to skip time-based checks if this is true. If this boolean is set to true, then e2fsck will always assume that the system clock can not be trusted.</p>
</dd>
<dt><code>buggy_init_scripts</code></dt>
<dd><p>This boolean relation is an alias for <code>accept_time_fudge</code> for backwards compatibility; it used to be that the behavior defined by <code>accept_time_fudge</code> above defaulted to false, and <code>buggy_init_scripts</code> would enable superblock time field to be wrong by up to 24 hours. When we changed the default, we also renamed this boolean relation to <code>accept_time_fudge.</code></p>
</dd>
<dt><code>clear_test_fs_flag</code></dt>
<dd><p>This boolean relation controls whether or not <a href='/8/e2fsck'>e2fsck</a>(8) will offer to clear the test_fs flag if the ext4 file system is available on the system. It defaults to true.</p>
</dd>
<dt><code>defer_check_on_battery</code></dt>
<dd><p>This boolean relation controls whether or not the interval between file system checks (either based on time or number of mounts) should be doubled if the system is running on battery. This setting defaults to true.</p>
</dd>
<dt><code>indexed_dir_slack_percentage</code></dt>
<dd><p>When <a href='/8/e2fsck'>e2fsck</a>(8) repacks a indexed directory, reserve the specified percentage of empty space in each leaf nodes so that a few new entries can be added to the directory without splitting leaf nodes, so that the average fill ratio of directories can be maintained at a higher, more efficient level. This relation defaults to 20 percent.</p>
</dd>
<dt><code>inode_count_fullmap</code></dt>
<dd><p>If this boolean relation is true, trade off using memory for speed when checking a file system with a large number of hard-linked files. The amount of memory required is proportional to the number of inodes in the file system. For large file systems, this can be gigabytes of memory. (For example a 40TB file system with 2.8 billion inodes will consume an additional 5.7 GB memory if this optimization is enabled.) This setting defaults to false.</p>
</dd>
<dt><code>log_dir</code></dt>
<dd><p>If the <code>log_filename</code> or <code>problem_log_filename</code> relations contains a relative pathname, then the log file will be placed in the directory named by the <code>log_dir</code> relation.</p>
</dd>
<dt><code>log_dir_fallback</code></dt>
<dd><p>This relation contains an alternate directory that will be used if the directory specified by <code>log_dir</code> is not available or is not writable.</p>
</dd>
<dt><code>log_dir_wait</code></dt>
<dd><p>If this boolean relation is true, them if the directories specified by <code>log_dir</code> or <code>log_dir_fallback</code> are not available or are not yet writable, e2fsck will save the output in a memory buffer, and a child process will periodically test to see if the log directory has become available after the boot sequence has mounted the requested file system for reading/writing. This implements the functionality provided by <a href='/8/logsave'>logsave</a>(8) for e2fsck log files.</p>
</dd>
<dt><code>log_filename</code></dt>
<dd><p>This relation specifies the file name where a copy of e2fsck's output will be written. If certain problem reports are suppressed using the <code>max_count_problems</code> relation, (or on a per-problem basis using the <code>max_count</code> relation), the full set of problem reports will be written to the log file. The filename may contain various percent-expressions (%D, %T, %N, etc.) which will be expanded so that the file name for the log file can include things like date, time, device name, and other run-time parameters. See the <strong>LOGGING</strong> section for more details.</p>
</dd>
<dt><code>max_count_problems</code></dt>
<dd><p>This relation specifies the maximum number of problem reports of a particular type will be printed to stdout before further problem reports of that type are squelched. This can be useful if the console is slow (i.e., connected to a serial port) and so a large amount of output could end up delaying the boot process for a long time (potentially hours).</p>
</dd>
<dt><code>no_optimize_extents</code></dt>
<dd><p>If this boolean relation is true, do not offer to optimize the extent tree by reducing the tree's width or depth. This setting defaults to false.</p>
</dd>
<dt><code>problem_log_filename</code></dt>
<dd><p>This relation specifies the file name where a log of problem codes found by e2fsck be written. The filename may contain various percent-expressions (%D, %T, %N, etc.) which will be expanded so that the file name for the log file can include things like date, time, device name, and other run-time parameters. See the <strong>LOGGING</strong> section for more details.</p>
</dd>
<dt><code>readahead_mem_pct</code></dt>
<dd><p>Use this percentage of memory to try to read in metadata blocks ahead of the main e2fsck thread. This should reduce run times, depending on the speed of the underlying storage and the amount of free memory. There is no default, but see <strong>readahead_kb</strong> for more details.</p>
</dd>
<dt><code>readahead_kb</code></dt>
<dd><p>Use this amount of memory to read in metadata blocks ahead of the main checking thread. Setting this value to zero disables readahead entirely. By default, this is set the size of two block groups' inode tables (typically 4MiB on a regular ext4 file system); if this amount is more than 1/50th of total physical memory, readahead is disabled.</p>
</dd>
<dt><code>report_features</code></dt>
<dd><p>If this boolean relation is true, e2fsck will print the file system features as part of its verbose reporting (i.e., if the <strong>-v</strong> option is specified)</p>
</dd>
<dt><code>report_time</code></dt>
<dd><p>If this boolean relation is true, e2fsck will run as if the options <strong>-tt</strong> are always specified. This will cause e2fsck to print timing statistics on a pass by pass basis for full file system checks.</p>
</dd>
<dt><code>report_verbose</code></dt>
<dd><p>If this boolean relation is true, e2fsck will run as if the option <strong>-v</strong> is always specified. This will cause e2fsck to print some additional information at the end of each full file system check.</p>
</dd>
</dl>
</div></div></div><h1 id='the-defaults-stanza'><a href='#the-defaults-stanza'>THE [DEFAULTS] STANZA</a></h1><div data-for='the-defaults-stanza' data-hide><div class='section' data-for='the-defaults-stanza'><div data-more>
<p>The following relations are defined in the <code>[defaults]</code> stanza.</p>
<dl>
<dt><code>undo_dir</code></dt>
<dd><p>This relation specifies the directory where the undo file should be stored. It can be overridden via the <strong>E2FSPROGS_UNDO_DIR</strong> environment variable. If the directory location is set to the value <code>none</code>, <strong>e2fsck</strong> will not create an undo file.</p>
</dd>
</dl>
</div></div></div><h1 id='the-problems-stanza'><a href='#the-problems-stanza'>THE [PROBLEMS] STANZA</a></h1><div data-for='the-problems-stanza' data-hide><div class='section' data-for='the-problems-stanza'><div data-more>
<p>Each tag in the <code>[problems]</code> stanza names a problem code specified with a leading "0x" followed by six hex digits. The value of the tag is a subsection where the relations in that subsection override the default treatment of that particular problem code.</p>
<p>Note that inappropriate settings in this stanza may cause <strong>e2fsck</strong> to behave incorrectly, or even crash. Most system administrators should not be making changes to this section without referring to source code.</p>
<p>Within each problem code's subsection, the following tags may be used:</p>
<dl>
<dt><code>description</code></dt>
<dd><p>This relation allows the message which is printed when this file system inconsistency is detected to be overridden.</p>
</dd>
<dt><code>preen_ok</code></dt>
<dd><p>This boolean relation overrides the default behavior controlling whether this file system problem should be automatically fixed when <strong>e2fsck</strong> is running in preen mode.</p>
</dd>
<dt><code>max_count</code></dt>
<dd><p>This integer relation overrides the <code>max_count_problems</code> parameter (set in the options section) for this particular problem.</p>
</dd>
<dt><code>no_ok</code></dt>
<dd><p>This boolean relation overrides the default behavior determining whether or not the file system will be marked as inconsistent if the user declines to fix the reported problem.</p>
</dd>
<dt><code>no_default</code></dt>
<dd><p>This boolean relation overrides whether the default answer for this problem (or question) should be "no".</p>
</dd>
<dt><code>preen_nomessage</code></dt>
<dd><p>This boolean relation overrides the default behavior controlling whether or not the description for this file system problem should be suppressed when <strong>e2fsck</strong> is running in preen mode.</p>
</dd>
<dt><code>no_nomsg</code></dt>
<dd><p>This boolean relation overrides the default behavior controlling whether or not the description for this file system problem should be suppressed when a problem forced not to be fixed, either because <strong>e2fsck</strong> is run with the <strong>-n</strong> option or because the <code>force_no</code> flag has been set for the problem.</p>
</dd>
<dt><code>force_no</code></dt>
<dd><p>This boolean option, if set to true, forces a problem to never be fixed. That is, it will be as if the user problem responds 'no' to the question of 'should this problem be fixed?'. The <code>force_no</code> option even overrides the <strong>-y</strong> option given on the command-line (just for the specific problem, of course).</p>
</dd>
<dt><code>not_a_fix</code></dt>
<dd><p>This boolean option, it set to true, marks the problem as one where if the user gives permission to make the requested change, it does not mean that the file system had a problem which has since been fixed. This is used for requests to optimize the file system's data structure, such as pruning an extent tree.</p>
</dd>
</dl>
</div></div></div><h1 id='the-scratch_files-stanza'><a href='#the-scratch_files-stanza'>THE [SCRATCH_FILES] STANZA</a></h1><div data-for='the-scratch_files-stanza' data-hide><div class='section' data-for='the-scratch_files-stanza'><div data-more>
<p>The following relations are defined in the <code>[scratch_files]</code> stanza.</p>
<dl>
<dt><code>directory</code></dt>
<dd><p>If the directory named by this relation exists and is writeable, then e2fsck will attempt to use this directory to store scratch files instead of using in-memory data structures.</p>
</dd>
<dt><code>numdirs_threshold</code></dt>
<dd><p>If this relation is set, then in-memory data structures will be used if the number of directories in the file system are fewer than amount specified.</p>
</dd>
<dt><code>dirinfo</code></dt>
<dd><p>This relation controls whether or not the scratch file directory is used instead of an in-memory data structure for directory information. It defaults to true.</p>
</dd>
<dt><code>icount</code></dt>
<dd><p>This relation controls whether or not the scratch file directory is used instead of an in-memory data structure when tracking inode counts. It defaults to true.</p>
</dd>
</dl>
</div></div></div><h1 id='logging'><a href='#logging'>LOGGING</a></h1><div data-for='logging' data-hide><div class='section' data-for='logging'><div data-more>
<p>E2fsck has the facility to save the information from an e2fsck run in a directory so that a system administrator can review its output at their leisure. This allows information captured during the automatic e2fsck preen run, as well as a manually started e2fsck run, to be saved for posterity. This facility is controlled by the <code>log_filename</code>, <code>log_dir</code>, <code>log_dir_fallback</code>, and <code>log_dir_wait</code> relations in the <code>[options]</code> stanza.</p>
<p>The filename in <code>log_filename</code> may contain the following percent-expressions that will be expanded as follows.</p>
<dl>
<dt><strong>%d</strong></dt>
<dd><p>The current day of the month</p>
</dd>
<dt><strong>%D</strong></dt>
<dd><p>The current date; this is a equivalent of <strong>%Y%m%d</strong></p>
</dd>
<dt><strong>%h</strong></dt>
<dd><p>The hostname of the system.</p>
</dd>
<dt><strong>%H</strong></dt>
<dd><p>The current hour in 24-hour format (00..23)</p>
</dd>
<dt><strong>%m</strong></dt>
<dd><p>The current month as a two-digit number (01..12)</p>
</dd>
<dt><strong>%M</strong></dt>
<dd><p>The current minute (00..59)</p>
</dd>
<dt><strong>%N</strong></dt>
<dd><p>The name of the block device containing the file system, with any directory pathname stripped off.</p>
</dd>
<dt><strong>%p</strong></dt>
<dd><p>The pid of the e2fsck process</p>
</dd>
<dt><strong>%s</strong></dt>
<dd><p>The current time expressed as the number of seconds since 1970-01-01 00:00:00 UTC</p>
</dd>
<dt><strong>%S</strong></dt>
<dd><p>The current second (00..59)</p>
</dd>
<dt><strong>%T</strong></dt>
<dd><p>The current time; this is equivalent of <strong>%H%M%S</strong></p>
</dd>
<dt><strong>%u</strong></dt>
<dd><p>The name of the user running e2fsck.</p>
</dd>
<dt><strong>%U</strong></dt>
<dd><p>This percent expression does not expand to anything, but it signals that any following date or time expressions should be expressed in UTC time instead of the local timezone.</p>
</dd>
<dt><strong>%y</strong></dt>
<dd><p>The last two digits of the current year (00..99)</p>
</dd>
<dt><strong>%Y</strong></dt>
<dd><p>The current year (i.e., 2012).</p>
</dd>
</dl>
</div></div></div><h1 id='examples'><a href='#examples'>EXAMPLES</a></h1><div class='section' data-for='examples'><div data-more>
<p>The following recipe will prevent e2fsck from aborting during the boot process when a file system contains orphaned files. (Of course, this is not always a good idea, since critical files that are needed for the security of the system could potentially end up in lost+found, and starting the system without first having a system administrator check things out may be dangerous.)</p>
<p><br/>
[problems]<br/>
0x040002 = {<br/>
preen_ok = true<br/>
description = "@u @i %i. "<br/>
}</p>
<p>The following recipe will cause an e2fsck logfile to be written to the directory /var/log/e2fsck, with a filename that contains the device name, the hostname of the system, the date, and time: e.g., "e2fsck-sda3.server.INFO.20120314-112142". If the directory containing /var/log is located on the root file system which is initially mounted read-only, then the output will be saved in memory and written out once the root file system has been remounted read/write. To avoid too much detail from being written to the serial console (which could potentially slow down the boot sequence), only print no more than 16 instances of each type of file system corruption.</p>
<p><br/>
[options]<br/>
max_count_problems = 16<br/>
log_dir = /var/log/e2fsck<br/>
log_filename = e2fsck-%N.%<a href="http://h.INFO">h.INFO</a>.%D-%T<br/>
log_dir_wait = true</p>
</div></div><h1 id='files'><a href='#files'>FILES</a></h1><div data-for='files' data-hide><div class='section' data-for='files'><div data-more>
<dl>
<dt><code>/etc/e2fsck.conf</code></dt>
<dd><p>The configuration file for <a href='/8/e2fsck'>e2fsck</a>(8).</p>
</dd>
</dl>
</div></div></div><h1 id='see-also'><a href='#see-also'>SEE ALSO</a></h1><div class='section' data-for='see-also'><div data-more>
<p><a href='/8/e2fsck'>e2fsck</a>(8)</p></div></div>


        </div>

    </body>

</html>