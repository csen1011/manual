<!DOCTYPE html>

<html lang="en">

    <head>

        <meta charset="utf-8">
        <meta name="viewport" content="initial-scale=1, width=device-width">

        <!-- https://getbootstrap.com/ -->
        <link crossorigin="anonymous" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css" integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx" rel="stylesheet">
        <script crossorigin="anonymous" integrity="sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa" src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js"></script>

        <!-- https://jquery.com/ -->
        <script crossorigin="anonymous" integrity="sha512-894YE6QWD5I59HgZOGReFYm4dnWc1Qt5NtvYSaNcOP+u1T9qYdvdihz0PPSiiqn/+/3e7Jo4EaG7TubfWGUrMQ==" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

        <!-- https://fontawesome.com/ -->
        <link crossorigin="anonymous" href="https://use.fontawesome.com/releases/v5.13.0/css/all.css" integrity="sha384-Bfad6CLCknfcloXFOyFnlgtENryhrpZCe29RTifKEixXQZ38WheV+i/6YWSzkz3V" rel="stylesheet">

        <!-- https://www.ubuntu.com/ -->
        <link href="https://assets.ubuntu.com/v1/49a1a858-favicon-32x32.png" rel="icon" type="image/png">

        <link href="/static/rouge.css" rel="stylesheet">

        <script>

            

    $(function() {

        // Ensure all elements are styled the same
        $('pre').addClass('p-3');
        $('table').addClass('table');

        // Add toggles
        $('div.section').each(function(index, element) {

            // Prepare switch
            const $section = $(element);
            const id = 'switch-' + $section.attr('data-for');
            const $switch = $(
                '<div class="form-check form-switch mb-4">' +
                '<input id="' + id + '" class="form-check-input" type="checkbox">' +
                '<label class="form-check-label" for="' + id + '">less comfortable</label>' +
                '</div>'
            );

            // Find comfort levels
            const $less = $section.find('[data-less]');
            const $more = $section.find('[data-more]');

            // If a less-comfortable section exists, check it by default
            if ($less.length) {
                $switch.find('input').prop('checked', true);
            }

            // If only one comfort level exists, disable switch
            if (!$less.length || !$more.length) {
                $switch.find('input').prop('disabled', true);
            }

            // Listen for changes
            $switch.find('input').on('change', function() {
                if ($(this).is(':checked')) {
                    $less.removeClass('d-none');
                    $more.addClass('d-none');
                }
                else {
                    $less.addClass('d-none');
                    $more.removeClass('d-none');
                }
            }).trigger('change');

            // Add switch to DOM section has less-comfy level
            if ($section.find('[data-less]').length) {
                $section.prepend($switch);
            }
        });

        // Hide sections
        $('[data-hide]').each(function(index, element) {
            const $button = $('<button class="btn btn-outline-primary btn-sm" type="button">Show</button>');
            const id = $(element).attr('data-for');
            $(element).before($button);
            $button.on('click', function() {
                $(element).show();
                $(this).remove();
            });
            if (id) {
                $button.attr('data-for', id);
                $('#' + id).children('a').on('click', function() {
                    $button.trigger('click');
                });
            }
            $(element).hide();
        });

        // Show section if in hash
        $(window).on('hashchange', function() {
            const id = window.location.hash.slice(1);
            if (id) {
                $('button[data-for="' + id + '"]').trigger('click');
            }
        });
        $(window).trigger('hashchange');
    });



        </script>

        <script>

            $(function() {

                // Add borders to tables
                $('.table').addClass('table-bordered');

                // Enable popovers
                $('[data-bs-toggle="popover"]').each(function(index, element) {
                    new bootstrap.Popover(element, {
                        boundary: 'viewport',
                        html: true,
                        placement: 'bottom',
                        trigger: 'focus'
                    });
                });

                // Ensure all elements are styled the same
                $('h1').addClass('border-bottom fw-bold h2 mb-3 pb-2 pt-4');
                $('h2').addClass('fw-bold h3');

                // Ensure last heading can be anchored atop page
                $(window).resize(function() {
                    const top = $('h1').last().offset().top;
                    const margin = $(window).height() - ($('body').outerHeight() - top);
                    $('body').css('margin-bottom', Math.max(0, Math.ceil(margin)) + 'px');
                });
                $(window).trigger('resize');

                // Reveal body
                $('body').removeClass('invisible');
            });

        </script>

        <style>

            /* Style popovers */
            .popover {
                font-family: inherit;
                max-width: 100%;
            }

            /* Wrap long words (and URLs, whether linked or not), especially on mobile,
            but not in buttons and not in tables, which should instead scroll horizontally */
            * {
                word-break: break-word;
            }
            button, table * {
                word-break: normal;
            }

            /* Remove underlining */
            a {
                text-decoration: none;
            }
            a:hover {
                text-decoration: underline;
            }
            nav a:hover {
                text-decoration: none;
            }

            /* Match Gmail's yellow */
            a[data-bs-toggle=popover] {
                border-bottom: 2px solid rgb(252, 237, 193);
                box-shadow: inset 0 -2px 0 rgb(252, 237, 193);
                cursor: help;
            }
            a[data-bs-toggle=popover]:hover {
                background-color: rgb(252, 237, 193);
            }

            /* Match pre tags */
            code {
                color: inherit;
            }

            /* A la Jekyll theme */
            code, pre {
                background-color: #f8f9fa;
                border: 1px solid #dee2e6;
                padding: calc(.2rem - 3px) 0.2rem;
            }
            pre code {
                background-color: initial;
                border: initial;
                padding: initial;
            }

            /* Don't shrink these */
            code, pre {
                font-size: inherit;
            }

            /* Don't italicize */
            dl dt {
                font-style: normal;
            }

            /* Don't fill viewport */
            .table {
                width: inherit;
            }

        </style>

        <style>

            

    /* Match dl and p */
    button {
        margin-bottom: 1rem;
    }

    /* Ensure syntax-highlighted code scrolls on iOS, https://stackoverflow.com/a/49592093 */
    pre code {
        white-space: pre;
        word-wrap: normal;
    }
    pre code span {
        white-space: nowrap;
    }

    

        </style>

        <title>CS50 Manual Pages</title>

    </head>

    <body class="font-monospace invisible pb-5">

        <nav class="bg-dark navbar navbar-dark navbar-expand-xl px-4">
            <a class="navbar-brand" href="/"><i class="fas fa-list pe-3"></i>CS50 Manual Pages</a>
        </nav>

        <div class="container-fluid mt-2 px-4">
            

    <h1 id='name'><a href='#name'>NAME</a></h1><div class='section' data-for='name'><div data-more>
<p><a data-bs-content='This is the man page for &lt;code&gt;sched_setscheduler&lt;/code&gt; and 1 related function.' data-bs-toggle='popover' tabindex='0'>sched_setscheduler</a>, sched_getscheduler - set and get scheduling policy/parameters</p>
</div></div><h1 id='synopsis'><a href='#synopsis'>SYNOPSIS</a></h1><div class='section' data-for='synopsis'><div data-more>
<pre><code><a data-bs-content='Be sure this line is atop your own code.' data-bs-toggle='popover' tabindex='0'>#include &lt;sched.h&gt;</a>

int sched_setscheduler(pid_t pid, int policy,
 const struct sched_param *param);

int sched_getscheduler(pid_t pid);</code></pre>
</div></div><h1 id='description'><a href='#description'>DESCRIPTION</a></h1><div class='section' data-for='description'><div data-more>
<p>The <a href='sched_setscheduler'>sched_setscheduler</a>() system call sets both the scheduling policy and parameters for the thread whose ID is specified in <code>pid</code>. If <code>pid</code> equals zero, the scheduling policy and parameters of the calling thread will be set.</p>
<p>The scheduling parameters are specified in the <code>param</code> argument, which is a pointer to a structure of the following form:</p>
<pre><code>struct sched_param {
    ...
    int sched_priority;
    ...
};</code></pre>
<p>In the current implementation, the structure contains only one field, <code>sched_priority</code>. The interpretation of <code>param</code> depends on the selected policy.</p>
<p>Currently, Linux supports the following "normal" (i.e., non-real-time) scheduling policies as values that may be specified in <code>policy</code>:</p>
<dl>
<dt><strong>SCHED_OTHER</strong></dt>
<dd><p>the standard round-robin time-sharing policy;</p>
</dd>
<dt><strong>SCHED_BATCH</strong></dt>
<dd><p>for "batch" style execution of processes; and</p>
</dd>
<dt><strong>SCHED_IDLE</strong></dt>
<dd><p>for running <code>very</code> low priority background jobs.</p>
</dd>
</dl>
<p>For each of the above policies, <code>param-&gt;sched_priority</code> must be 0.</p>
<p>Various "real-time" policies are also supported, for special time-critical applications that need precise control over the way in which runnable threads are selected for execution. For the rules governing when a process may use these policies, see <a href='/7/sched'>sched</a>(7). The real-time policies that may be specified in <code>policy</code> are:</p>
<dl>
<dt><strong>SCHED_FIFO</strong></dt>
<dd><p>a first-in, first-out policy; and</p>
</dd>
<dt><strong>SCHED_RR</strong></dt>
<dd><p>a round-robin policy.</p>
</dd>
</dl>
<p>For each of the above policies, <code>param-&gt;sched_priority</code> specifies a scheduling priority for the thread. This is a number in the range returned by calling <a href='/2/sched_get_priority_min'>sched_get_priority_min</a>(2) and <a href='/2/sched_get_priority_max'>sched_get_priority_max</a>(2) with the specified <code>policy</code>. On Linux, these system calls return, respectively, 1 and 99.</p>
<p>Since Linux 2.6.32, the <strong>SCHED_RESET_ON_FORK</strong> flag can be ORed in <code>policy</code> when calling <a href='sched_setscheduler'>sched_setscheduler</a>(). As a result of including this flag, children created by <a href='/2/fork'>fork</a>(2) do not inherit privileged scheduling policies. See <a href='/7/sched'>sched</a>(7) for details.</p>
<p><a href='sched_getscheduler'>sched_getscheduler</a>() returns the current scheduling policy of the thread identified by <code>pid</code>. If <code>pid</code> equals zero, the policy of the calling thread will be retrieved.</p>
</div></div><h1 id='return-value'><a href='#return-value'>RETURN VALUE</a></h1><div class='section' data-for='return-value'><div data-more>
<p>On success, <a href='sched_setscheduler'>sched_setscheduler</a>() returns zero. On success, <a href='sched_getscheduler'>sched_getscheduler</a>() returns the policy for the thread (a nonnegative integer). On error, both calls return -1, and <code>errno</code> is set appropriately.</p>
</div></div><h1 id='errors'><a href='#errors'>ERRORS</a></h1><div data-for='errors' data-hide><div class='section' data-for='errors'><div data-more>
<dl>
<dt><strong>EINVAL</strong></dt>
<dd><p>Invalid arguments: <code>pid</code> is negative or <code>param</code> is NULL.</p>
</dd>
<dt><strong>EINVAL</strong></dt>
<dd><p>(<a href='sched_setscheduler'>sched_setscheduler</a>()) <code>policy</code> is not one of the recognized policies.</p>
</dd>
<dt><strong>EINVAL</strong></dt>
<dd><p>(<a href='sched_setscheduler'>sched_setscheduler</a>()) <code>param</code> does not make sense for the specified <code>policy</code>.</p>
</dd>
<dt><strong>EPERM</strong></dt>
<dd><p>The calling thread does not have appropriate privileges.</p>
</dd>
<dt><strong>ESRCH</strong></dt>
<dd><p>The thread whose ID is <code>pid</code> could not be found.</p>
</dd>
</dl>
</div></div></div><h1 id='conforming-to'><a href='#conforming-to'>CONFORMING TO</a></h1><div data-for='conforming-to' data-hide><div class='section' data-for='conforming-to'><div data-more>
<p>POSIX.1-2001, POSIX.1-2008 (but see BUGS below). The <strong>SCHED_BATCH</strong> and <strong>SCHED_IDLE</strong> policies are Linux-specific.</p>
</div></div></div><h1 id='notes'><a href='#notes'>NOTES</a></h1><div data-for='notes' data-hide><div class='section' data-for='notes'><div data-more>
<p>Further details of the semantics of all of the above "normal" and "real-time" scheduling policies can be found in the <a href='/7/sched'>sched</a>(7) manual page. That page also describes an additional policy, <strong>SCHED_DEADLINE</strong>, which is settable only via <a href='/2/sched_setattr'>sched_setattr</a>(2).</p>
<p>POSIX systems on which <a href='sched_setscheduler'>sched_setscheduler</a>() and <a href='sched_getscheduler'>sched_getscheduler</a>() are available define <strong>_POSIX_PRIORITY_SCHEDULING</strong> in <code>&lt;unistd.h&gt;</code>.</p>
<p>POSIX.1 does not detail the permissions that an unprivileged thread requires in order to call <a href='sched_setscheduler'>sched_setscheduler</a>(), and details vary across systems. For example, the Solaris 7 manual page says that the real or effective user ID of the caller must match the real user ID or the save set-user-ID of the target.</p>
<p>The scheduling policy and parameters are in fact per-thread attributes on Linux. The value returned from a call to <a href='/2/gettid'>gettid</a>(2) can be passed in the argument <code>pid</code>. Specifying <code>pid</code> as 0 will operate on the attributes of the calling thread, and passing the value returned from a call to <a href='/2/getpid'>getpid</a>(2) will operate on the attributes of the main thread of the thread group. (If you are using the POSIX threads API, then use <a href='/3/pthread_setschedparam'>pthread_setschedparam</a>(3), <a href='/3/pthread_getschedparam'>pthread_getschedparam</a>(3), and <a href='/3/pthread_setschedprio'>pthread_setschedprio</a>(3), instead of the <a href='/2/sched_*'>sched_*</a>(2) system calls.)</p>
</div></div></div><h1 id='bugs'><a href='#bugs'>BUGS</a></h1><div data-for='bugs' data-hide><div class='section' data-for='bugs'><div data-more>
<p>POSIX.1 says that on success, <a href='sched_setscheduler'>sched_setscheduler</a>() should return the previous scheduling policy. Linux <a href='sched_setscheduler'>sched_setscheduler</a>() does not conform to this requirement, since it always returns 0 on success.</p>
</div></div></div><h1 id='see-also'><a href='#see-also'>SEE ALSO</a></h1><div class='section' data-for='see-also'><div data-more>
<p><a href='/1/chrt'>chrt</a>(1), <a href='/2/nice'>nice</a>(2), <a href='/2/sched_get_priority_max'>sched_get_priority_max</a>(2), <a href='/2/sched_get_priority_min'>sched_get_priority_min</a>(2), <a href='/2/sched_getaffinity'>sched_getaffinity</a>(2), <a href='/2/sched_getattr'>sched_getattr</a>(2), <a href='/2/sched_getparam'>sched_getparam</a>(2), <a href='/2/sched_rr_get_interval'>sched_rr_get_interval</a>(2), <a href='/2/sched_setaffinity'>sched_setaffinity</a>(2), <a href='/2/sched_setattr'>sched_setattr</a>(2), <a href='/2/sched_setparam'>sched_setparam</a>(2), <a href='/2/sched_yield'>sched_yield</a>(2), <a href='/2/setpriority'>setpriority</a>(2), <a href='/7/capabilities'>capabilities</a>(7), <a href='/7/cpuset'>cpuset</a>(7), <a href='/7/sched'>sched</a>(7)</p>
</div></div><h1 id='colophon'><a href='#colophon'>COLOPHON</a></h1><div data-for='colophon' data-hide><div class='section' data-for='colophon'><div data-more>
<p>This page is part of release 5.10 of the Linux <code>man-pages</code> project. A description of the project, information about reporting bugs, and the latest version of this page, can be found at <a href="https://www.kernel.org/doc/man-pages/">https://www.kernel.org/doc/man-pages/</a>.</p></div></div></div>


        </div>

    </body>

</html>